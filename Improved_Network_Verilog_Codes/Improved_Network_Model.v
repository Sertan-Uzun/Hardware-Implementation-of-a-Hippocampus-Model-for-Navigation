// -------------------------------------------------------------
// 
// File Name: C:\Users\Sertan\Desktop\Simulink_Model\Verilog_Codes\Improved_Network_Model\Improved_Network_Model.v
// Created: 2025-07-05 12:04:46
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 0.0001
// Target subsystem base rate: 0.0001
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        0.0001
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// Out1_0                        ce_out        0.0001
// Out1_1                        ce_out        0.0001
// Out1_2                        ce_out        0.0001
// Out1_3                        ce_out        0.0001
// Out1_4                        ce_out        0.0001
// Out1_5                        ce_out        0.0001
// Out1_6                        ce_out        0.0001
// Out1_7                        ce_out        0.0001
// Out1_8                        ce_out        0.0001
// Out1_9                        ce_out        0.0001
// Out1_10                       ce_out        0.0001
// Out1_11                       ce_out        0.0001
// Out1_12                       ce_out        0.0001
// Out1_13                       ce_out        0.0001
// Out1_14                       ce_out        0.0001
// Out1_15                       ce_out        0.0001
// Out1_16                       ce_out        0.0001
// Out1_17                       ce_out        0.0001
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Improved_Network_Model
// Source Path: Improved_Network_Model
// Hierarchy Level: 0
// Model version: 1.37
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Improved_Network_Model
          (clk,
           reset,
           clk_enable,
           In1,
           In2,
           ce_out,
           Out1_0,
           Out1_1,
           Out1_2,
           Out1_3,
           Out1_4,
           Out1_5,
           Out1_6,
           Out1_7,
           Out1_8,
           Out1_9,
           Out1_10,
           Out1_11,
           Out1_12,
           Out1_13,
           Out1_14,
           Out1_15,
           Out1_16,
           Out1_17);


  input   clk;
  input   reset;
  input   clk_enable;
  input   signed [15:0] In1;  // sfix16_En8
  input   signed [15:0] In2;  // sfix16_En8
  output  ce_out;
  output  signed [15:0] Out1_0;  // sfix16_En8
  output  signed [15:0] Out1_1;  // sfix16_En8
  output  signed [15:0] Out1_2;  // sfix16_En8
  output  signed [15:0] Out1_3;  // sfix16_En8
  output  signed [15:0] Out1_4;  // sfix16_En8
  output  signed [15:0] Out1_5;  // sfix16_En8
  output  signed [15:0] Out1_6;  // sfix16_En8
  output  signed [15:0] Out1_7;  // sfix16_En8
  output  signed [15:0] Out1_8;  // sfix16_En8
  output  signed [15:0] Out1_9;  // sfix16_En8
  output  signed [15:0] Out1_10;  // sfix16_En8
  output  signed [15:0] Out1_11;  // sfix16_En8
  output  signed [15:0] Out1_12;  // sfix16_En8
  output  signed [15:0] Out1_13;  // sfix16_En8
  output  signed [15:0] Out1_14;  // sfix16_En8
  output  signed [15:0] Out1_15;  // sfix16_En8
  output  signed [15:0] Out1_16;  // sfix16_En8
  output  signed [15:0] Out1_17;  // sfix16_En8


  wire signed [15:0] Gain44_out1 [0:7];  // sfix16_En8 [8]
  wire signed [15:0] INn_out1;  // sfix16_En8
  wire signed [31:0] Gain37_cast;  // sfix32_En22
  wire signed [15:0] Gain37_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain38_cast;  // sfix32_En22
  wire signed [15:0] Gain38_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain39_cast;  // sfix32_En22
  wire signed [15:0] Gain39_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain40_cast;  // sfix32_En22
  wire signed [15:0] Gain40_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain41_cast;  // sfix32_En22
  wire signed [15:0] Gain41_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain42_cast;  // sfix32_En22
  wire signed [15:0] Gain42_out1 [0:7];  // sfix16_En8 [8]
  wire signed [47:0] Gain43_cast;  // sfix48_En24
  wire signed [15:0] Gain43_out1 [0:7];  // sfix16_En8 [8]
  wire signed [15:0] Gain52_out1 [0:7];  // sfix16_En8 [8]
  wire signed [15:0] PFe8_out1;  // sfix16_En8
  wire signed [15:0] PFi8_out1;  // sfix16_En8
  wire signed [15:0] Gain51_out1 [0:7];  // sfix16_En8 [8]
  wire signed [15:0] Mux3_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain51_cast;  // sfix32_En22
  wire signed [31:0] Gain51_cast_1;  // sfix32_En22
  wire signed [31:0] Gain51_cast_2;  // sfix32_En22
  wire signed [31:0] Gain51_cast_3;  // sfix32_En22
  wire signed [31:0] Gain51_cast_4;  // sfix32_En22
  wire signed [31:0] Gain51_cast_5;  // sfix32_En22
  wire signed [31:0] Gain51_cast_6;  // sfix32_En22
  wire signed [15:0] PFe7_out1;  // sfix16_En8
  wire signed [15:0] PFi7_out1;  // sfix16_En8
  wire signed [15:0] Gain50_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain50_cast;  // sfix32_En22
  wire signed [31:0] Gain50_cast_1;  // sfix32_En22
  wire signed [31:0] Gain50_cast_2;  // sfix32_En22
  wire signed [31:0] Gain50_cast_3;  // sfix32_En22
  wire signed [31:0] Gain50_cast_4;  // sfix32_En22
  wire signed [31:0] Gain50_cast_5;  // sfix32_En22
  wire signed [31:0] Gain50_cast_6;  // sfix32_En22
  wire signed [15:0] PFe6_out1;  // sfix16_En8
  wire signed [15:0] PFi6_out1;  // sfix16_En8
  wire signed [15:0] Gain49_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain49_cast;  // sfix32_En22
  wire signed [31:0] Gain49_cast_1;  // sfix32_En22
  wire signed [31:0] Gain49_cast_2;  // sfix32_En22
  wire signed [31:0] Gain49_cast_3;  // sfix32_En22
  wire signed [31:0] Gain49_cast_4;  // sfix32_En22
  wire signed [31:0] Gain49_cast_5;  // sfix32_En22
  wire signed [31:0] Gain49_cast_6;  // sfix32_En22
  wire signed [15:0] PFe5_out1;  // sfix16_En8
  wire signed [15:0] PFi5_out1;  // sfix16_En8
  wire signed [15:0] Gain48_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain48_cast;  // sfix32_En22
  wire signed [31:0] Gain48_cast_1;  // sfix32_En22
  wire signed [31:0] Gain48_cast_2;  // sfix32_En22
  wire signed [31:0] Gain48_cast_3;  // sfix32_En22
  wire signed [31:0] Gain48_cast_4;  // sfix32_En22
  wire signed [31:0] Gain48_cast_5;  // sfix32_En22
  wire signed [31:0] Gain48_cast_6;  // sfix32_En22
  wire signed [15:0] PFe4_out1;  // sfix16_En8
  wire signed [15:0] PFi4_out1;  // sfix16_En8
  wire signed [15:0] Gain47_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain47_cast;  // sfix32_En22
  wire signed [31:0] Gain47_cast_1;  // sfix32_En22
  wire signed [31:0] Gain47_cast_2;  // sfix32_En22
  wire signed [31:0] Gain47_cast_3;  // sfix32_En22
  wire signed [31:0] Gain47_cast_4;  // sfix32_En22
  wire signed [31:0] Gain47_cast_5;  // sfix32_En22
  wire signed [31:0] Gain47_cast_6;  // sfix32_En22
  wire signed [15:0] PFe3_out1;  // sfix16_En8
  wire signed [15:0] PFi3_out1;  // sfix16_En8
  wire signed [15:0] Gain46_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain46_cast;  // sfix32_En22
  wire signed [31:0] Gain46_cast_1;  // sfix32_En22
  wire signed [31:0] Gain46_cast_2;  // sfix32_En22
  wire signed [31:0] Gain46_cast_3;  // sfix32_En22
  wire signed [31:0] Gain46_cast_4;  // sfix32_En22
  wire signed [31:0] Gain46_cast_5;  // sfix32_En22
  wire signed [31:0] Gain46_cast_6;  // sfix32_En22
  wire signed [15:0] PFe2_out1;  // sfix16_En8
  wire signed [15:0] PFi2_out1;  // sfix16_En8
  wire signed [15:0] Gain45_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain45_cast;  // sfix32_En22
  wire signed [31:0] Gain45_cast_1;  // sfix32_En22
  wire signed [31:0] Gain45_cast_2;  // sfix32_En22
  wire signed [31:0] Gain45_cast_3;  // sfix32_En22
  wire signed [31:0] Gain45_cast_4;  // sfix32_En22
  wire signed [31:0] Gain45_cast_5;  // sfix32_En22
  wire signed [31:0] Gain45_cast_6;  // sfix32_En22
  wire signed [15:0] PFe1_out1;  // sfix16_En8
  wire signed [15:0] PFi1_out1;  // sfix16_En8
  wire signed [31:0] Gain52_cast;  // sfix32_En22
  wire signed [31:0] Gain52_cast_1;  // sfix32_En22
  wire signed [31:0] Gain52_cast_2;  // sfix32_En22
  wire signed [31:0] Gain52_cast_3;  // sfix32_En22
  wire signed [31:0] Gain52_cast_4;  // sfix32_En22
  wire signed [31:0] Gain52_cast_5;  // sfix32_En22
  wire signed [31:0] Gain52_cast_6;  // sfix32_En22
  wire signed [15:0] PFe_Conductivities [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain28_mul_temp;  // sfix32_En23
  wire signed [31:0] Gain28_mul_temp_1;  // sfix32_En23
  wire signed [31:0] Gain28_mul_temp_2;  // sfix32_En23
  wire signed [31:0] Gain28_mul_temp_3;  // sfix32_En23
  wire signed [31:0] Gain28_mul_temp_4;  // sfix32_En23
  wire signed [31:0] Gain28_mul_temp_5;  // sfix32_En23
  wire signed [15:0] Gain28_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain32_cast;  // sfix32_En22
  wire signed [15:0] Gain32_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain20_out1 [0:7];  // sfix32_En22 [8]
  wire signed [15:0] INb_out1_0;  // sfix16_En8
  wire signed [15:0] INb_out1_1;  // sfix16_En8
  wire signed [15:0] INb_out1_2;  // sfix16_En8
  wire signed [15:0] INb_out1_3;  // sfix16_En8
  wire signed [15:0] INb_out1_4;  // sfix16_En8
  wire signed [15:0] INb_out1_5;  // sfix16_En8
  wire signed [15:0] INb_out1_6;  // sfix16_En8
  wire signed [15:0] INb_out1_7;  // sfix16_En8
  wire signed [15:0] INb_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Add26_v;  // sfix32_En8
  wire signed [31:0] Add26_add_cast [0:7];  // sfix32_En8 [8]
  wire signed [31:0] Add26_add_temp [0:7];  // sfix32_En8 [8]
  wire signed [15:0] Add26_out1 [0:7];  // sfix16_En8 [8]
  wire signed [15:0] in0_0;  // sfix16_En8
  wire signed [15:0] in0_1;  // sfix16_En8
  wire signed [31:0] Sum_of_Elements2_stage2_add_cast;  // sfix32_En8
  wire signed [31:0] Sum_of_Elements2_stage2_add_cast_1;  // sfix32_En8
  wire signed [31:0] Sum_of_Elements2_stage2_add_temp;  // sfix32_En8
  wire signed [16:0] Sum_of_Elements2_op_stage1;  // sfix17_En8
  wire signed [15:0] in0_2;  // sfix16_En8
  wire signed [31:0] Sum_of_Elements2_stage3_add_cast;  // sfix32_En8
  wire signed [31:0] Sum_of_Elements2_stage3_add_cast_1;  // sfix32_En8
  wire signed [31:0] Sum_of_Elements2_stage3_add_temp;  // sfix32_En8
  wire signed [17:0] Sum_of_Elements2_op_stage2;  // sfix18_En8
  wire signed [15:0] in0_3;  // sfix16_En8
  wire signed [31:0] Sum_of_Elements2_stage4_add_cast;  // sfix32_En8
  wire signed [31:0] Sum_of_Elements2_stage4_add_cast_1;  // sfix32_En8
  wire signed [31:0] Sum_of_Elements2_stage4_add_temp;  // sfix32_En8
  wire signed [18:0] Sum_of_Elements2_op_stage3;  // sfix19_En8
  wire signed [15:0] in0_4;  // sfix16_En8
  wire signed [31:0] Sum_of_Elements2_stage5_add_cast;  // sfix32_En8
  wire signed [31:0] Sum_of_Elements2_stage5_add_cast_1;  // sfix32_En8
  wire signed [31:0] Sum_of_Elements2_stage5_add_temp;  // sfix32_En8
  wire signed [19:0] Sum_of_Elements2_op_stage4;  // sfix20_En8
  wire signed [15:0] in0_5;  // sfix16_En8
  wire signed [31:0] Sum_of_Elements2_stage6_add_cast;  // sfix32_En8
  wire signed [31:0] Sum_of_Elements2_stage6_add_cast_1;  // sfix32_En8
  wire signed [31:0] Sum_of_Elements2_stage6_add_temp;  // sfix32_En8
  wire signed [20:0] Sum_of_Elements2_op_stage5;  // sfix21_En8
  wire signed [15:0] in0_6;  // sfix16_En8
  wire signed [31:0] Sum_of_Elements2_stage7_add_cast;  // sfix32_En8
  wire signed [31:0] Sum_of_Elements2_stage7_add_cast_1;  // sfix32_En8
  wire signed [31:0] Sum_of_Elements2_stage7_add_temp;  // sfix32_En8
  wire signed [21:0] Sum_of_Elements2_op_stage6;  // sfix22_En8
  wire signed [15:0] in0_7;  // sfix16_En8
  wire signed [31:0] Sum_of_Elements2_stage8_add_cast;  // sfix32_En8
  wire signed [31:0] Sum_of_Elements2_stage8_add_cast_1;  // sfix32_En8
  wire signed [31:0] Sum_of_Elements2_stage8_add_temp;  // sfix32_En8
  wire signed [15:0] Sum_of_Elements2_out1;  // sfix16_En8
  wire signed [31:0] Gain27_mul_temp;  // sfix32_En22
  wire signed [31:0] Gain27_mul_temp_1;  // sfix32_En22
  wire signed [31:0] Gain27_mul_temp_2;  // sfix32_En22
  wire signed [31:0] Gain27_mul_temp_3;  // sfix32_En22
  wire signed [31:0] Gain27_mul_temp_4;  // sfix32_En22
  wire signed [31:0] Gain27_mul_temp_5;  // sfix32_En22
  wire signed [31:0] Gain27_mul_temp_6;  // sfix32_En22
  wire signed [15:0] Gain27_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain31_cast;  // sfix32_En22
  wire signed [15:0] Gain31_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain26_mul_temp;  // sfix32_En22
  wire signed [31:0] Gain26_mul_temp_1;  // sfix32_En22
  wire signed [31:0] Gain26_mul_temp_2;  // sfix32_En22
  wire signed [31:0] Gain26_mul_temp_3;  // sfix32_En22
  wire signed [31:0] Gain26_mul_temp_4;  // sfix32_En22
  wire signed [31:0] Gain26_mul_temp_5;  // sfix32_En22
  wire signed [31:0] Gain26_mul_temp_6;  // sfix32_En22
  wire signed [15:0] Gain26_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain36_cast;  // sfix32_En22
  wire signed [15:0] Gain36_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain25_mul_temp;  // sfix32_En22
  wire signed [31:0] Gain25_mul_temp_1;  // sfix32_En22
  wire signed [31:0] Gain25_mul_temp_2;  // sfix32_En22
  wire signed [31:0] Gain25_mul_temp_3;  // sfix32_En22
  wire signed [31:0] Gain25_mul_temp_4;  // sfix32_En22
  wire signed [31:0] Gain25_mul_temp_5;  // sfix32_En22
  wire signed [28:0] Gain25_1;  // sfix29
  wire signed [31:0] Gain25_2;  // sfix32
  wire signed [15:0] Gain25_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain35_cast;  // sfix32_En22
  wire signed [15:0] Gain35_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain24_mul_temp;  // sfix32_En22
  wire signed [31:0] Gain24_mul_temp_1;  // sfix32_En22
  wire signed [31:0] Gain24_mul_temp_2;  // sfix32_En22
  wire signed [31:0] Gain24_mul_temp_3;  // sfix32_En22
  wire signed [31:0] Gain24_mul_temp_4;  // sfix32_En22
  wire signed [31:0] Gain24_mul_temp_5;  // sfix32_En22
  wire signed [15:0] Gain24_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain34_cast;  // sfix32_En22
  wire signed [15:0] Gain34_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain23_mul_temp;  // sfix32_En24
  wire signed [31:0] Gain23_mul_temp_1;  // sfix32_En24
  wire signed [31:0] Gain23_mul_temp_2;  // sfix32_En24
  wire signed [31:0] Gain23_mul_temp_3;  // sfix32_En24
  wire signed [31:0] Gain23_mul_temp_4;  // sfix32_En24
  wire signed [31:0] Gain23_mul_temp_5;  // sfix32_En24
  wire signed [31:0] Gain23_mul_temp_6;  // sfix32_En24
  wire signed [15:0] Gain23_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain33_cast;  // sfix32_En22
  wire signed [15:0] Gain33_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain22_mul_temp;  // sfix32_En22
  wire signed [31:0] Gain22_mul_temp_1;  // sfix32_En22
  wire signed [31:0] Gain22_mul_temp_2;  // sfix32_En22
  wire signed [31:0] Gain22_mul_temp_3;  // sfix32_En22
  wire signed [31:0] Gain22_mul_temp_4;  // sfix32_En22
  wire signed [31:0] Gain22_mul_temp_5;  // sfix32_En22
  wire signed [31:0] Gain22_mul_temp_6;  // sfix32_En22
  wire signed [31:0] Gain22_mul_temp_7;  // sfix32_En22
  wire signed [15:0] Gain22_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain30_cast;  // sfix32_En22
  wire signed [15:0] Gain30_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain21_mul_temp;  // sfix32_En23
  wire signed [31:0] Gain21_mul_temp_1;  // sfix32_En23
  wire signed [31:0] Gain21_mul_temp_2;  // sfix32_En23
  wire signed [31:0] Gain21_mul_temp_3;  // sfix32_En23
  wire signed [31:0] Gain21_mul_temp_4;  // sfix32_En23
  wire signed [31:0] Gain21_mul_temp_5;  // sfix32_En23
  wire signed [31:0] Gain21_mul_temp_6;  // sfix32_En23
  wire signed [31:0] Gain21_mul_temp_7;  // sfix32_En23
  wire signed [15:0] Gain21_out1 [0:7];  // sfix16_En8 [8]
  wire signed [31:0] Gain29_cast;  // sfix32_En22
  wire signed [15:0] Gain29_out1 [0:7];  // sfix16_En8 [8]
  wire signed [15:0] INa_out1;  // sfix16_En8
  wire signed [15:0] OBJ1_out1;  // sfix16_En8
  wire signed [15:0] OBJ2_out1;  // sfix16_En8
  wire signed [15:0] OBJ3_out1;  // sfix16_En8
  wire signed [15:0] OBJ4_out1;  // sfix16_En8
  wire signed [15:0] OBJ5_out1;  // sfix16_En8
  wire signed [15:0] OBJ6_out1;  // sfix16_En8
  wire signed [15:0] OBJ7_out1;  // sfix16_En8
  wire signed [31:0] Gain18_out1 [0:7];  // sfix32_En22 [8]
  wire signed [31:0] in0_7_1;  // sfix32_En22
  wire signed [31:0] in0_6_1;  // sfix32_En22
  wire signed [31:0] in0_5_1;  // sfix32_En22
  wire signed [31:0] in0_4_1;  // sfix32_En22
  wire signed [31:0] in0_3_1;  // sfix32_En22
  wire signed [31:0] in0_2_1;  // sfix32_En22
  wire signed [31:0] in0_1_1;  // sfix32_En22
  wire signed [15:0] OBJ_Conductivities [0:7];  // sfix16_En8 [8]
  wire signed [31:0] in0_0_1;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements1_stage2_add_temp;  // sfix32_En22
  wire signed [32:0] Sum_of_Elements1_op_stage1;  // sfix33_En22
  wire signed [31:0] Sum_of_Elements1_stage3_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements1_stage3_add_temp;  // sfix32_En22
  wire signed [33:0] Sum_of_Elements1_op_stage2;  // sfix34_En22
  wire signed [31:0] Sum_of_Elements1_stage4_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements1_stage4_add_temp;  // sfix32_En22
  wire signed [34:0] Sum_of_Elements1_op_stage3;  // sfix35_En22
  wire signed [31:0] Sum_of_Elements1_stage5_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements1_stage5_add_temp;  // sfix32_En22
  wire signed [35:0] Sum_of_Elements1_op_stage4;  // sfix36_En22
  wire signed [31:0] Sum_of_Elements1_stage6_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements1_stage6_add_temp;  // sfix32_En22
  wire signed [36:0] Sum_of_Elements1_op_stage5;  // sfix37_En22
  wire signed [31:0] Sum_of_Elements1_stage7_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements1_stage7_add_temp;  // sfix32_En22
  wire signed [37:0] Sum_of_Elements1_op_stage6;  // sfix38_En22
  wire signed [31:0] Sum_of_Elements1_stage8_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements1_out1;  // sfix32_En22
  wire signed [15:0] OBJ8_out1;  // sfix16_En8
  wire signed [31:0] Gain17_out1 [0:7];  // sfix32_En24 [8]
  wire signed [31:0] Gain16_out1 [0:7];  // sfix32_En25 [8]
  wire signed [31:0] Gain15_out1 [0:7];  // sfix32_En22 [8]
  wire signed [31:0] Gain14_out1 [0:7];  // sfix32_En25 [8]
  wire signed [31:0] Gain13_out1 [0:7];  // sfix32_En22 [8]
  wire signed [31:0] Gain12_out1 [0:7];  // sfix32_En22 [8]
  wire signed [31:0] Gain11_out1 [0:7];  // sfix32_En22 [8]
  wire signed [31:0] Gain10_out1 [0:7];  // sfix32_En25 [8]
  wire signed [31:0] Gain9_out1 [0:7];  // sfix32_En25 [8]
  wire signed [31:0] Gain8_out1 [0:7];  // sfix32_En22 [8]
  wire signed [31:0] Gain7_out1 [0:7];  // sfix32_En25 [8]
  wire signed [31:0] Gain6_out1 [0:7];  // sfix32_En23 [8]
  wire signed [31:0] Gain5_out1 [0:7];  // sfix32_En22 [8]
  wire signed [31:0] Gain4_out1 [0:7];  // sfix32_En25 [8]
  wire signed [31:0] Gain3_out1 [0:7];  // sfix32_En22 [8]
  wire signed [31:0] Gain2_out1 [0:7];  // sfix32_En25 [8]
  wire signed [31:0] Gain1_out1 [0:7];  // sfix32_En25 [8]
  wire signed [31:0] Gain_out1 [0:7];  // sfix32_En22 [8]
  wire signed [15:0] Add1_out1 [0:7];  // sfix16_En8 [8]
  wire signed [15:0] HDPC1_out1;  // sfix16_En8
  wire signed [15:0] HDPC2_out1;  // sfix16_En8
  wire signed [15:0] HDPC3_out1;  // sfix16_En8
  wire signed [15:0] HDPC4_out1;  // sfix16_En8
  wire signed [15:0] HDPC5_out1;  // sfix16_En8
  wire signed [15:0] HDPC6_out1;  // sfix16_En8
  wire signed [15:0] HDPC7_out1;  // sfix16_En8
  wire signed [15:0] HDPC8_out1;  // sfix16_En8
  wire signed [15:0] HDPC9_out1;  // sfix16_En8
  wire signed [15:0] HDPC10_out1;  // sfix16_En8
  wire signed [15:0] HDPC11_out1;  // sfix16_En8
  wire signed [15:0] HDPC12_out1;  // sfix16_En8
  wire signed [15:0] HDPC13_out1;  // sfix16_En8
  wire signed [15:0] HDPC14_out1;  // sfix16_En8
  wire signed [15:0] HDPC15_out1;  // sfix16_En8
  wire signed [15:0] HDPC16_out1;  // sfix16_En8
  wire signed [15:0] HDPC17_out1;  // sfix16_En8
  wire signed [31:0] Gain19_out1 [0:17];  // sfix32_En22 [18]
  wire signed [31:0] in0_17;  // sfix32_En22
  wire signed [31:0] in0_16;  // sfix32_En22
  wire signed [31:0] in0_15;  // sfix32_En22
  wire signed [31:0] in0_14;  // sfix32_En22
  wire signed [31:0] in0_13;  // sfix32_En22
  wire signed [31:0] in0_12;  // sfix32_En22
  wire signed [31:0] in0_11;  // sfix32_En22
  wire signed [31:0] in0_10;  // sfix32_En22
  wire signed [31:0] in0_9;  // sfix32_En22
  wire signed [31:0] in0_8;  // sfix32_En22
  wire signed [31:0] in0_7_2;  // sfix32_En22
  wire signed [31:0] in0_6_2;  // sfix32_En22
  wire signed [31:0] in0_5_2;  // sfix32_En22
  wire signed [31:0] in0_4_2;  // sfix32_En22
  wire signed [31:0] in0_3_2;  // sfix32_En22
  wire signed [31:0] in0_2_2;  // sfix32_En22
  wire signed [31:0] in0_1_2;  // sfix32_En22
  wire signed [15:0] HDPC_Conductivities [0:17];  // sfix16_En8 [18]
  wire signed [31:0] in0_0_2;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage2_add_temp;  // sfix32_En22
  wire signed [32:0] Sum_of_Elements_op_stage1;  // sfix33_En22
  wire signed [31:0] Sum_of_Elements_stage3_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage3_add_temp;  // sfix32_En22
  wire signed [33:0] Sum_of_Elements_op_stage2;  // sfix34_En22
  wire signed [31:0] Sum_of_Elements_stage4_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage4_add_temp;  // sfix32_En22
  wire signed [34:0] Sum_of_Elements_op_stage3;  // sfix35_En22
  wire signed [31:0] Sum_of_Elements_stage5_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage5_add_temp;  // sfix32_En22
  wire signed [35:0] Sum_of_Elements_op_stage4;  // sfix36_En22
  wire signed [31:0] Sum_of_Elements_stage6_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage6_add_temp;  // sfix32_En22
  wire signed [36:0] Sum_of_Elements_op_stage5;  // sfix37_En22
  wire signed [31:0] Sum_of_Elements_stage7_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage7_add_temp;  // sfix32_En22
  wire signed [37:0] Sum_of_Elements_op_stage6;  // sfix38_En22
  wire signed [31:0] Sum_of_Elements_stage8_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage8_add_temp;  // sfix32_En22
  wire signed [38:0] Sum_of_Elements_op_stage7;  // sfix39_En22
  wire signed [31:0] Sum_of_Elements_stage9_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage9_add_temp;  // sfix32_En22
  wire signed [39:0] Sum_of_Elements_op_stage8;  // sfix40_En22
  wire signed [31:0] Sum_of_Elements_stage10_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage10_add_temp;  // sfix32_En22
  wire signed [40:0] Sum_of_Elements_op_stage9;  // sfix41_En22
  wire signed [31:0] Sum_of_Elements_stage11_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage11_add_temp;  // sfix32_En22
  wire signed [41:0] Sum_of_Elements_op_stage10;  // sfix42_En22
  wire signed [31:0] Sum_of_Elements_stage12_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage12_add_temp;  // sfix32_En22
  wire signed [42:0] Sum_of_Elements_op_stage11;  // sfix43_En22
  wire signed [31:0] Sum_of_Elements_stage13_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage13_add_temp;  // sfix32_En22
  wire signed [43:0] Sum_of_Elements_op_stage12;  // sfix44_En22
  wire signed [31:0] Sum_of_Elements_stage14_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage14_add_temp;  // sfix32_En22
  wire signed [44:0] Sum_of_Elements_op_stage13;  // sfix45_En22
  wire signed [31:0] Sum_of_Elements_stage15_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage15_add_temp;  // sfix32_En22
  wire signed [45:0] Sum_of_Elements_op_stage14;  // sfix46_En22
  wire signed [31:0] Sum_of_Elements_stage16_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage16_add_temp;  // sfix32_En22
  wire signed [46:0] Sum_of_Elements_op_stage15;  // sfix47_En22
  wire signed [31:0] Sum_of_Elements_stage17_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_stage17_add_temp;  // sfix32_En22
  wire signed [47:0] Sum_of_Elements_op_stage16;  // sfix48_En22
  wire signed [31:0] Sum_of_Elements_stage18_add_cast;  // sfix32_En22
  wire signed [31:0] Sum_of_Elements_out1;  // sfix32_En22
  wire signed [15:0] INc_out1;  // sfix16_En8
  wire signed [31:0] Add1_u;  // sfix32_En8
  wire signed [31:0] Add1_add_cast [0:7];  // sfix32_En8 [8]
  wire signed [31:0] Add1_add_temp [0:7];  // sfix32_En8 [8]
  wire signed [15:0] HDPC18_out1;  // sfix16_En8


  assign Gain44_out1[0] = In1;
  assign Gain44_out1[1] = In1;
  assign Gain44_out1[2] = In1;
  assign Gain44_out1[3] = In1;
  assign Gain44_out1[4] = In1;
  assign Gain44_out1[5] = In1;
  assign Gain44_out1[6] = In1;
  assign Gain44_out1[7] = In1;



  INn u_INn (.In1(In2),  // sfix16_En8
             .g(INn_out1)  // sfix16_En8
             );

  assign Gain37_cast = {{2{In1[15]}}, {In1, 14'b00000000000000}};
  assign Gain37_out1[0] = Gain37_cast[29:14];
  assign Gain37_out1[1] = 16'sb0000000000000000;
  assign Gain37_out1[2] = 16'sb0000000000000000;
  assign Gain37_out1[3] = 16'sb0000000000000000;
  assign Gain37_out1[4] = 16'sb0000000000000000;
  assign Gain37_out1[5] = 16'sb0000000000000000;
  assign Gain37_out1[6] = 16'sb0000000000000000;
  assign Gain37_out1[7] = 16'sb0000000000000000;



  assign Gain38_out1[0] = 16'sb0000000000000000;
  assign Gain38_cast = {{2{In1[15]}}, {In1, 14'b00000000000000}};
  assign Gain38_out1[1] = Gain38_cast[29:14];
  assign Gain38_out1[2] = 16'sb0000000000000000;
  assign Gain38_out1[3] = 16'sb0000000000000000;
  assign Gain38_out1[4] = 16'sb0000000000000000;
  assign Gain38_out1[5] = 16'sb0000000000000000;
  assign Gain38_out1[6] = 16'sb0000000000000000;
  assign Gain38_out1[7] = 16'sb0000000000000000;



  assign Gain39_out1[0] = 16'sb0000000000000000;
  assign Gain39_out1[1] = 16'sb0000000000000000;
  assign Gain39_cast = {{2{In1[15]}}, {In1, 14'b00000000000000}};
  assign Gain39_out1[2] = Gain39_cast[29:14];
  assign Gain39_out1[3] = 16'sb0000000000000000;
  assign Gain39_out1[4] = 16'sb0000000000000000;
  assign Gain39_out1[5] = 16'sb0000000000000000;
  assign Gain39_out1[6] = 16'sb0000000000000000;
  assign Gain39_out1[7] = 16'sb0000000000000000;



  assign Gain40_out1[0] = 16'sb0000000000000000;
  assign Gain40_out1[1] = 16'sb0000000000000000;
  assign Gain40_out1[2] = 16'sb0000000000000000;
  assign Gain40_cast = {{2{In1[15]}}, {In1, 14'b00000000000000}};
  assign Gain40_out1[3] = Gain40_cast[29:14];
  assign Gain40_out1[4] = 16'sb0000000000000000;
  assign Gain40_out1[5] = 16'sb0000000000000000;
  assign Gain40_out1[6] = 16'sb0000000000000000;
  assign Gain40_out1[7] = 16'sb0000000000000000;



  assign Gain41_out1[0] = 16'sb0000000000000000;
  assign Gain41_out1[1] = 16'sb0000000000000000;
  assign Gain41_out1[2] = 16'sb0000000000000000;
  assign Gain41_out1[3] = 16'sb0000000000000000;
  assign Gain41_cast = {{2{In1[15]}}, {In1, 14'b00000000000000}};
  assign Gain41_out1[4] = Gain41_cast[29:14];
  assign Gain41_out1[5] = 16'sb0000000000000000;
  assign Gain41_out1[6] = 16'sb0000000000000000;
  assign Gain41_out1[7] = 16'sb0000000000000000;



  assign Gain42_out1[0] = 16'sb0000000000000000;
  assign Gain42_out1[1] = 16'sb0000000000000000;
  assign Gain42_out1[2] = 16'sb0000000000000000;
  assign Gain42_out1[3] = 16'sb0000000000000000;
  assign Gain42_out1[4] = 16'sb0000000000000000;
  assign Gain42_cast = {{2{In1[15]}}, {In1, 14'b00000000000000}};
  assign Gain42_out1[5] = Gain42_cast[29:14];
  assign Gain42_out1[6] = 16'sb0000000000000000;
  assign Gain42_out1[7] = 16'sb0000000000000000;



  assign Gain43_out1[0] = 16'sb0000000000000000;
  assign Gain43_out1[1] = 16'sb0000000000000000;
  assign Gain43_out1[2] = 16'sb0000000000000000;
  assign Gain43_out1[3] = 16'sb0000000000000000;
  assign Gain43_out1[4] = 16'sb0000000000000000;
  assign Gain43_out1[5] = 16'sb0000000000000000;
  assign Gain43_cast = {{16{In1[15]}}, {In1, 16'b0000000000000000}};
  assign Gain43_out1[6] = Gain43_cast[31:16];
  assign Gain43_out1[7] = 16'sb0000000000000000;



  PFi8 u_PFi8 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e(PFe8_out1),  // sfix16_En8
               .g(PFi8_out1)  // sfix16_En8
               );

  assign Gain51_cast = {{2{Mux3_out1[0][15]}}, {Mux3_out1[0], 14'b00000000000000}};
  assign Gain51_out1[0] = Gain51_cast[29:14];
  assign Gain51_cast_1 = {{2{Mux3_out1[1][15]}}, {Mux3_out1[1], 14'b00000000000000}};
  assign Gain51_out1[1] = Gain51_cast_1[29:14];
  assign Gain51_cast_2 = {{2{Mux3_out1[2][15]}}, {Mux3_out1[2], 14'b00000000000000}};
  assign Gain51_out1[2] = Gain51_cast_2[29:14];
  assign Gain51_cast_3 = {{2{Mux3_out1[3][15]}}, {Mux3_out1[3], 14'b00000000000000}};
  assign Gain51_out1[3] = Gain51_cast_3[29:14];
  assign Gain51_cast_4 = {{2{Mux3_out1[4][15]}}, {Mux3_out1[4], 14'b00000000000000}};
  assign Gain51_out1[4] = Gain51_cast_4[29:14];
  assign Gain51_cast_5 = {{2{Mux3_out1[5][15]}}, {Mux3_out1[5], 14'b00000000000000}};
  assign Gain51_out1[5] = Gain51_cast_5[29:14];
  assign Gain51_out1[6] = 16'sb0000000000000000;
  assign Gain51_cast_6 = {{2{Mux3_out1[7][15]}}, {Mux3_out1[7], 14'b00000000000000}};
  assign Gain51_out1[7] = Gain51_cast_6[29:14];



  PFe7 u_PFe7 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(In2),  // sfix16_En8
               .g_e_1(Gain43_out1[0]),  // sfix16_En8
               .g_e_2(Gain43_out1[1]),  // sfix16_En8
               .g_e_3(Gain43_out1[2]),  // sfix16_En8
               .g_e_4(Gain43_out1[3]),  // sfix16_En8
               .g_e_5(Gain43_out1[4]),  // sfix16_En8
               .g_e_6(Gain43_out1[5]),  // sfix16_En8
               .g_e_7(Gain43_out1[6]),  // sfix16_En8
               .g_e_8(Gain43_out1[7]),  // sfix16_En8
               .g_i_0(INn_out1),  // sfix16_En8
               .g_i_1(Gain51_out1[0]),  // sfix16_En8
               .g_i_2(Gain51_out1[1]),  // sfix16_En8
               .g_i_3(Gain51_out1[2]),  // sfix16_En8
               .g_i_4(Gain51_out1[3]),  // sfix16_En8
               .g_i_5(Gain51_out1[4]),  // sfix16_En8
               .g_i_6(Gain51_out1[5]),  // sfix16_En8
               .g_i_7(Gain51_out1[6]),  // sfix16_En8
               .g_i_8(Gain51_out1[7]),  // sfix16_En8
               .g(PFe7_out1)  // sfix16_En8
               );

  PFi7 u_PFi7 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e(PFe7_out1),  // sfix16_En8
               .g(PFi7_out1)  // sfix16_En8
               );

  assign Gain50_cast = {{2{Mux3_out1[0][15]}}, {Mux3_out1[0], 14'b00000000000000}};
  assign Gain50_out1[0] = Gain50_cast[29:14];
  assign Gain50_cast_1 = {{2{Mux3_out1[1][15]}}, {Mux3_out1[1], 14'b00000000000000}};
  assign Gain50_out1[1] = Gain50_cast_1[29:14];
  assign Gain50_cast_2 = {{2{Mux3_out1[2][15]}}, {Mux3_out1[2], 14'b00000000000000}};
  assign Gain50_out1[2] = Gain50_cast_2[29:14];
  assign Gain50_cast_3 = {{2{Mux3_out1[3][15]}}, {Mux3_out1[3], 14'b00000000000000}};
  assign Gain50_out1[3] = Gain50_cast_3[29:14];
  assign Gain50_cast_4 = {{2{Mux3_out1[4][15]}}, {Mux3_out1[4], 14'b00000000000000}};
  assign Gain50_out1[4] = Gain50_cast_4[29:14];
  assign Gain50_out1[5] = 16'sb0000000000000000;
  assign Gain50_cast_5 = {{2{Mux3_out1[6][15]}}, {Mux3_out1[6], 14'b00000000000000}};
  assign Gain50_out1[6] = Gain50_cast_5[29:14];
  assign Gain50_cast_6 = {{2{Mux3_out1[7][15]}}, {Mux3_out1[7], 14'b00000000000000}};
  assign Gain50_out1[7] = Gain50_cast_6[29:14];



  PFe6 u_PFe6 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(In2),  // sfix16_En8
               .g_e_1(Gain42_out1[0]),  // sfix16_En8
               .g_e_2(Gain42_out1[1]),  // sfix16_En8
               .g_e_3(Gain42_out1[2]),  // sfix16_En8
               .g_e_4(Gain42_out1[3]),  // sfix16_En8
               .g_e_5(Gain42_out1[4]),  // sfix16_En8
               .g_e_6(Gain42_out1[5]),  // sfix16_En8
               .g_e_7(Gain42_out1[6]),  // sfix16_En8
               .g_e_8(Gain42_out1[7]),  // sfix16_En8
               .g_i_0(INn_out1),  // sfix16_En8
               .g_i_1(Gain50_out1[0]),  // sfix16_En8
               .g_i_2(Gain50_out1[1]),  // sfix16_En8
               .g_i_3(Gain50_out1[2]),  // sfix16_En8
               .g_i_4(Gain50_out1[3]),  // sfix16_En8
               .g_i_5(Gain50_out1[4]),  // sfix16_En8
               .g_i_6(Gain50_out1[5]),  // sfix16_En8
               .g_i_7(Gain50_out1[6]),  // sfix16_En8
               .g_i_8(Gain50_out1[7]),  // sfix16_En8
               .g(PFe6_out1)  // sfix16_En8
               );

  PFi6 u_PFi6 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e(PFe6_out1),  // sfix16_En8
               .g(PFi6_out1)  // sfix16_En8
               );

  assign Gain49_cast = {{2{Mux3_out1[0][15]}}, {Mux3_out1[0], 14'b00000000000000}};
  assign Gain49_out1[0] = Gain49_cast[29:14];
  assign Gain49_cast_1 = {{2{Mux3_out1[1][15]}}, {Mux3_out1[1], 14'b00000000000000}};
  assign Gain49_out1[1] = Gain49_cast_1[29:14];
  assign Gain49_cast_2 = {{2{Mux3_out1[2][15]}}, {Mux3_out1[2], 14'b00000000000000}};
  assign Gain49_out1[2] = Gain49_cast_2[29:14];
  assign Gain49_cast_3 = {{2{Mux3_out1[3][15]}}, {Mux3_out1[3], 14'b00000000000000}};
  assign Gain49_out1[3] = Gain49_cast_3[29:14];
  assign Gain49_out1[4] = 16'sb0000000000000000;
  assign Gain49_cast_4 = {{2{Mux3_out1[5][15]}}, {Mux3_out1[5], 14'b00000000000000}};
  assign Gain49_out1[5] = Gain49_cast_4[29:14];
  assign Gain49_cast_5 = {{2{Mux3_out1[6][15]}}, {Mux3_out1[6], 14'b00000000000000}};
  assign Gain49_out1[6] = Gain49_cast_5[29:14];
  assign Gain49_cast_6 = {{2{Mux3_out1[7][15]}}, {Mux3_out1[7], 14'b00000000000000}};
  assign Gain49_out1[7] = Gain49_cast_6[29:14];



  PFe5 u_PFe5 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(In2),  // sfix16_En8
               .g_e_1(Gain41_out1[0]),  // sfix16_En8
               .g_e_2(Gain41_out1[1]),  // sfix16_En8
               .g_e_3(Gain41_out1[2]),  // sfix16_En8
               .g_e_4(Gain41_out1[3]),  // sfix16_En8
               .g_e_5(Gain41_out1[4]),  // sfix16_En8
               .g_e_6(Gain41_out1[5]),  // sfix16_En8
               .g_e_7(Gain41_out1[6]),  // sfix16_En8
               .g_e_8(Gain41_out1[7]),  // sfix16_En8
               .g_i_0(INn_out1),  // sfix16_En8
               .g_i_1(Gain49_out1[0]),  // sfix16_En8
               .g_i_2(Gain49_out1[1]),  // sfix16_En8
               .g_i_3(Gain49_out1[2]),  // sfix16_En8
               .g_i_4(Gain49_out1[3]),  // sfix16_En8
               .g_i_5(Gain49_out1[4]),  // sfix16_En8
               .g_i_6(Gain49_out1[5]),  // sfix16_En8
               .g_i_7(Gain49_out1[6]),  // sfix16_En8
               .g_i_8(Gain49_out1[7]),  // sfix16_En8
               .g(PFe5_out1)  // sfix16_En8
               );

  PFi5 u_PFi5 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e(PFe5_out1),  // sfix16_En8
               .g(PFi5_out1)  // sfix16_En8
               );

  assign Gain48_cast = {{2{Mux3_out1[0][15]}}, {Mux3_out1[0], 14'b00000000000000}};
  assign Gain48_out1[0] = Gain48_cast[29:14];
  assign Gain48_cast_1 = {{2{Mux3_out1[1][15]}}, {Mux3_out1[1], 14'b00000000000000}};
  assign Gain48_out1[1] = Gain48_cast_1[29:14];
  assign Gain48_cast_2 = {{2{Mux3_out1[2][15]}}, {Mux3_out1[2], 14'b00000000000000}};
  assign Gain48_out1[2] = Gain48_cast_2[29:14];
  assign Gain48_out1[3] = 16'sb0000000000000000;
  assign Gain48_cast_3 = {{2{Mux3_out1[4][15]}}, {Mux3_out1[4], 14'b00000000000000}};
  assign Gain48_out1[4] = Gain48_cast_3[29:14];
  assign Gain48_cast_4 = {{2{Mux3_out1[5][15]}}, {Mux3_out1[5], 14'b00000000000000}};
  assign Gain48_out1[5] = Gain48_cast_4[29:14];
  assign Gain48_cast_5 = {{2{Mux3_out1[6][15]}}, {Mux3_out1[6], 14'b00000000000000}};
  assign Gain48_out1[6] = Gain48_cast_5[29:14];
  assign Gain48_cast_6 = {{2{Mux3_out1[7][15]}}, {Mux3_out1[7], 14'b00000000000000}};
  assign Gain48_out1[7] = Gain48_cast_6[29:14];



  PFe4 u_PFe4 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(In2),  // sfix16_En8
               .g_e_1(Gain40_out1[0]),  // sfix16_En8
               .g_e_2(Gain40_out1[1]),  // sfix16_En8
               .g_e_3(Gain40_out1[2]),  // sfix16_En8
               .g_e_4(Gain40_out1[3]),  // sfix16_En8
               .g_e_5(Gain40_out1[4]),  // sfix16_En8
               .g_e_6(Gain40_out1[5]),  // sfix16_En8
               .g_e_7(Gain40_out1[6]),  // sfix16_En8
               .g_e_8(Gain40_out1[7]),  // sfix16_En8
               .g_i_0(INn_out1),  // sfix16_En8
               .g_i_1(Gain48_out1[0]),  // sfix16_En8
               .g_i_2(Gain48_out1[1]),  // sfix16_En8
               .g_i_3(Gain48_out1[2]),  // sfix16_En8
               .g_i_4(Gain48_out1[3]),  // sfix16_En8
               .g_i_5(Gain48_out1[4]),  // sfix16_En8
               .g_i_6(Gain48_out1[5]),  // sfix16_En8
               .g_i_7(Gain48_out1[6]),  // sfix16_En8
               .g_i_8(Gain48_out1[7]),  // sfix16_En8
               .g(PFe4_out1)  // sfix16_En8
               );

  PFi4 u_PFi4 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e(PFe4_out1),  // sfix16_En8
               .g(PFi4_out1)  // sfix16_En8
               );

  assign Gain47_cast = {{2{Mux3_out1[0][15]}}, {Mux3_out1[0], 14'b00000000000000}};
  assign Gain47_out1[0] = Gain47_cast[29:14];
  assign Gain47_cast_1 = {{2{Mux3_out1[1][15]}}, {Mux3_out1[1], 14'b00000000000000}};
  assign Gain47_out1[1] = Gain47_cast_1[29:14];
  assign Gain47_out1[2] = 16'sb0000000000000000;
  assign Gain47_cast_2 = {{2{Mux3_out1[3][15]}}, {Mux3_out1[3], 14'b00000000000000}};
  assign Gain47_out1[3] = Gain47_cast_2[29:14];
  assign Gain47_cast_3 = {{2{Mux3_out1[4][15]}}, {Mux3_out1[4], 14'b00000000000000}};
  assign Gain47_out1[4] = Gain47_cast_3[29:14];
  assign Gain47_cast_4 = {{2{Mux3_out1[5][15]}}, {Mux3_out1[5], 14'b00000000000000}};
  assign Gain47_out1[5] = Gain47_cast_4[29:14];
  assign Gain47_cast_5 = {{2{Mux3_out1[6][15]}}, {Mux3_out1[6], 14'b00000000000000}};
  assign Gain47_out1[6] = Gain47_cast_5[29:14];
  assign Gain47_cast_6 = {{2{Mux3_out1[7][15]}}, {Mux3_out1[7], 14'b00000000000000}};
  assign Gain47_out1[7] = Gain47_cast_6[29:14];



  PFe3 u_PFe3 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(In2),  // sfix16_En8
               .g_e_1(Gain39_out1[0]),  // sfix16_En8
               .g_e_2(Gain39_out1[1]),  // sfix16_En8
               .g_e_3(Gain39_out1[2]),  // sfix16_En8
               .g_e_4(Gain39_out1[3]),  // sfix16_En8
               .g_e_5(Gain39_out1[4]),  // sfix16_En8
               .g_e_6(Gain39_out1[5]),  // sfix16_En8
               .g_e_7(Gain39_out1[6]),  // sfix16_En8
               .g_e_8(Gain39_out1[7]),  // sfix16_En8
               .g_i_0(INn_out1),  // sfix16_En8
               .g_i_1(Gain47_out1[0]),  // sfix16_En8
               .g_i_2(Gain47_out1[1]),  // sfix16_En8
               .g_i_3(Gain47_out1[2]),  // sfix16_En8
               .g_i_4(Gain47_out1[3]),  // sfix16_En8
               .g_i_5(Gain47_out1[4]),  // sfix16_En8
               .g_i_6(Gain47_out1[5]),  // sfix16_En8
               .g_i_7(Gain47_out1[6]),  // sfix16_En8
               .g_i_8(Gain47_out1[7]),  // sfix16_En8
               .g(PFe3_out1)  // sfix16_En8
               );

  PFi3 u_PFi3 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e(PFe3_out1),  // sfix16_En8
               .g(PFi3_out1)  // sfix16_En8
               );

  assign Gain46_cast = {{2{Mux3_out1[0][15]}}, {Mux3_out1[0], 14'b00000000000000}};
  assign Gain46_out1[0] = Gain46_cast[29:14];
  assign Gain46_out1[1] = 16'sb0000000000000000;
  assign Gain46_cast_1 = {{2{Mux3_out1[2][15]}}, {Mux3_out1[2], 14'b00000000000000}};
  assign Gain46_out1[2] = Gain46_cast_1[29:14];
  assign Gain46_cast_2 = {{2{Mux3_out1[3][15]}}, {Mux3_out1[3], 14'b00000000000000}};
  assign Gain46_out1[3] = Gain46_cast_2[29:14];
  assign Gain46_cast_3 = {{2{Mux3_out1[4][15]}}, {Mux3_out1[4], 14'b00000000000000}};
  assign Gain46_out1[4] = Gain46_cast_3[29:14];
  assign Gain46_cast_4 = {{2{Mux3_out1[5][15]}}, {Mux3_out1[5], 14'b00000000000000}};
  assign Gain46_out1[5] = Gain46_cast_4[29:14];
  assign Gain46_cast_5 = {{2{Mux3_out1[6][15]}}, {Mux3_out1[6], 14'b00000000000000}};
  assign Gain46_out1[6] = Gain46_cast_5[29:14];
  assign Gain46_cast_6 = {{2{Mux3_out1[7][15]}}, {Mux3_out1[7], 14'b00000000000000}};
  assign Gain46_out1[7] = Gain46_cast_6[29:14];



  PFe2 u_PFe2 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(In2),  // sfix16_En8
               .g_e_1(Gain38_out1[0]),  // sfix16_En8
               .g_e_2(Gain38_out1[1]),  // sfix16_En8
               .g_e_3(Gain38_out1[2]),  // sfix16_En8
               .g_e_4(Gain38_out1[3]),  // sfix16_En8
               .g_e_5(Gain38_out1[4]),  // sfix16_En8
               .g_e_6(Gain38_out1[5]),  // sfix16_En8
               .g_e_7(Gain38_out1[6]),  // sfix16_En8
               .g_e_8(Gain38_out1[7]),  // sfix16_En8
               .g_i_0(INn_out1),  // sfix16_En8
               .g_i_1(Gain46_out1[0]),  // sfix16_En8
               .g_i_2(Gain46_out1[1]),  // sfix16_En8
               .g_i_3(Gain46_out1[2]),  // sfix16_En8
               .g_i_4(Gain46_out1[3]),  // sfix16_En8
               .g_i_5(Gain46_out1[4]),  // sfix16_En8
               .g_i_6(Gain46_out1[5]),  // sfix16_En8
               .g_i_7(Gain46_out1[6]),  // sfix16_En8
               .g_i_8(Gain46_out1[7]),  // sfix16_En8
               .g(PFe2_out1)  // sfix16_En8
               );

  PFi2 u_PFi2 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e(PFe2_out1),  // sfix16_En8
               .g(PFi2_out1)  // sfix16_En8
               );

  assign Gain45_out1[0] = 16'sb0000000000000000;
  assign Gain45_cast = {{2{Mux3_out1[1][15]}}, {Mux3_out1[1], 14'b00000000000000}};
  assign Gain45_out1[1] = Gain45_cast[29:14];
  assign Gain45_cast_1 = {{2{Mux3_out1[2][15]}}, {Mux3_out1[2], 14'b00000000000000}};
  assign Gain45_out1[2] = Gain45_cast_1[29:14];
  assign Gain45_cast_2 = {{2{Mux3_out1[3][15]}}, {Mux3_out1[3], 14'b00000000000000}};
  assign Gain45_out1[3] = Gain45_cast_2[29:14];
  assign Gain45_cast_3 = {{2{Mux3_out1[4][15]}}, {Mux3_out1[4], 14'b00000000000000}};
  assign Gain45_out1[4] = Gain45_cast_3[29:14];
  assign Gain45_cast_4 = {{2{Mux3_out1[5][15]}}, {Mux3_out1[5], 14'b00000000000000}};
  assign Gain45_out1[5] = Gain45_cast_4[29:14];
  assign Gain45_cast_5 = {{2{Mux3_out1[6][15]}}, {Mux3_out1[6], 14'b00000000000000}};
  assign Gain45_out1[6] = Gain45_cast_5[29:14];
  assign Gain45_cast_6 = {{2{Mux3_out1[7][15]}}, {Mux3_out1[7], 14'b00000000000000}};
  assign Gain45_out1[7] = Gain45_cast_6[29:14];



  PFe1 u_PFe1 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(In2),  // sfix16_En8
               .g_e_1(Gain37_out1[0]),  // sfix16_En8
               .g_e_2(Gain37_out1[1]),  // sfix16_En8
               .g_e_3(Gain37_out1[2]),  // sfix16_En8
               .g_e_4(Gain37_out1[3]),  // sfix16_En8
               .g_e_5(Gain37_out1[4]),  // sfix16_En8
               .g_e_6(Gain37_out1[5]),  // sfix16_En8
               .g_e_7(Gain37_out1[6]),  // sfix16_En8
               .g_e_8(Gain37_out1[7]),  // sfix16_En8
               .g_i_0(INn_out1),  // sfix16_En8
               .g_i_1(Gain45_out1[0]),  // sfix16_En8
               .g_i_2(Gain45_out1[1]),  // sfix16_En8
               .g_i_3(Gain45_out1[2]),  // sfix16_En8
               .g_i_4(Gain45_out1[3]),  // sfix16_En8
               .g_i_5(Gain45_out1[4]),  // sfix16_En8
               .g_i_6(Gain45_out1[5]),  // sfix16_En8
               .g_i_7(Gain45_out1[6]),  // sfix16_En8
               .g_i_8(Gain45_out1[7]),  // sfix16_En8
               .g(PFe1_out1)  // sfix16_En8
               );

  PFi1 u_PFi1 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e(PFe1_out1),  // sfix16_En8
               .g(PFi1_out1)  // sfix16_En8
               );

  assign Mux3_out1[0] = PFi1_out1;
  assign Mux3_out1[1] = PFi2_out1;
  assign Mux3_out1[2] = PFi3_out1;
  assign Mux3_out1[3] = PFi4_out1;
  assign Mux3_out1[4] = PFi5_out1;
  assign Mux3_out1[5] = PFi6_out1;
  assign Mux3_out1[6] = PFi7_out1;
  assign Mux3_out1[7] = PFi8_out1;

  assign Gain52_cast = {{2{Mux3_out1[0][15]}}, {Mux3_out1[0], 14'b00000000000000}};
  assign Gain52_out1[0] = Gain52_cast[29:14];
  assign Gain52_cast_1 = {{2{Mux3_out1[1][15]}}, {Mux3_out1[1], 14'b00000000000000}};
  assign Gain52_out1[1] = Gain52_cast_1[29:14];
  assign Gain52_cast_2 = {{2{Mux3_out1[2][15]}}, {Mux3_out1[2], 14'b00000000000000}};
  assign Gain52_out1[2] = Gain52_cast_2[29:14];
  assign Gain52_cast_3 = {{2{Mux3_out1[3][15]}}, {Mux3_out1[3], 14'b00000000000000}};
  assign Gain52_out1[3] = Gain52_cast_3[29:14];
  assign Gain52_cast_4 = {{2{Mux3_out1[4][15]}}, {Mux3_out1[4], 14'b00000000000000}};
  assign Gain52_out1[4] = Gain52_cast_4[29:14];
  assign Gain52_cast_5 = {{2{Mux3_out1[5][15]}}, {Mux3_out1[5], 14'b00000000000000}};
  assign Gain52_out1[5] = Gain52_cast_5[29:14];
  assign Gain52_cast_6 = {{2{Mux3_out1[6][15]}}, {Mux3_out1[6], 14'b00000000000000}};
  assign Gain52_out1[6] = Gain52_cast_6[29:14];
  assign Gain52_out1[7] = 16'sb0000000000000000;



  PFe8 u_PFe8 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(In2),  // sfix16_En8
               .g_e_1(Gain44_out1[0]),  // sfix16_En8
               .g_e_2(Gain44_out1[1]),  // sfix16_En8
               .g_e_3(Gain44_out1[2]),  // sfix16_En8
               .g_e_4(Gain44_out1[3]),  // sfix16_En8
               .g_e_5(Gain44_out1[4]),  // sfix16_En8
               .g_e_6(Gain44_out1[5]),  // sfix16_En8
               .g_e_7(Gain44_out1[6]),  // sfix16_En8
               .g_e_8(Gain44_out1[7]),  // sfix16_En8
               .g_i_0(INn_out1),  // sfix16_En8
               .g_i_1(Gain52_out1[0]),  // sfix16_En8
               .g_i_2(Gain52_out1[1]),  // sfix16_En8
               .g_i_3(Gain52_out1[2]),  // sfix16_En8
               .g_i_4(Gain52_out1[3]),  // sfix16_En8
               .g_i_5(Gain52_out1[4]),  // sfix16_En8
               .g_i_6(Gain52_out1[5]),  // sfix16_En8
               .g_i_7(Gain52_out1[6]),  // sfix16_En8
               .g_i_8(Gain52_out1[7]),  // sfix16_En8
               .g(PFe8_out1)  // sfix16_En8
               );

  assign PFe_Conductivities[0] = PFe8_out1;
  assign PFe_Conductivities[1] = PFe7_out1;
  assign PFe_Conductivities[2] = PFe6_out1;
  assign PFe_Conductivities[3] = PFe5_out1;
  assign PFe_Conductivities[4] = PFe4_out1;
  assign PFe_Conductivities[5] = PFe3_out1;
  assign PFe_Conductivities[6] = PFe2_out1;
  assign PFe_Conductivities[7] = PFe1_out1;

  assign Gain28_mul_temp = 16'sb0001111010110010 * PFe_Conductivities[0];
  assign Gain28_out1[0] = Gain28_mul_temp[30:15];
  assign Gain28_out1[1] = 16'sb0000000000000000;
  assign Gain28_mul_temp_1 = 16'sb0100001111011000 * PFe_Conductivities[2];
  assign Gain28_out1[2] = Gain28_mul_temp_1[30:15];
  assign Gain28_mul_temp_2 = 16'sb0000001010010010 * PFe_Conductivities[3];
  assign Gain28_out1[3] = Gain28_mul_temp_2[30:15];
  assign Gain28_mul_temp_3 = 16'sb1110000101001001 * PFe_Conductivities[4];
  assign Gain28_out1[4] = Gain28_mul_temp_3[30:15];
  assign Gain28_mul_temp_4 = 16'sb0011100110010110 * PFe_Conductivities[5];
  assign Gain28_out1[5] = Gain28_mul_temp_4[30:15];
  assign Gain28_out1[6] = 16'sb0000000000000000;
  assign Gain28_mul_temp_5 = 16'sb1100001010010001 * PFe_Conductivities[7];
  assign Gain28_out1[7] = Gain28_mul_temp_5[30:15];



  assign Gain32_out1[0] = 16'sb0000000000000000;
  assign Gain32_out1[1] = 16'sb0000000000000000;
  assign Gain32_out1[2] = 16'sb0000000000000000;
  assign Gain32_out1[3] = 16'sb0000000000000000;
  assign Gain32_out1[4] = 16'sb0000000000000000;
  assign Gain32_out1[5] = 16'sb0000000000000000;
  assign Gain32_out1[6] = 16'sb0000000000000000;
  assign Gain32_cast = {{2{In1[15]}}, {In1, 14'b00000000000000}};
  assign Gain32_out1[7] = Gain32_cast[29:14];



  assign Gain20_out1[0] = {{2{PFe_Conductivities[0][15]}}, {PFe_Conductivities[0], 14'b00000000000000}};
  assign Gain20_out1[1] = {{2{PFe_Conductivities[1][15]}}, {PFe_Conductivities[1], 14'b00000000000000}};
  assign Gain20_out1[2] = {{2{PFe_Conductivities[2][15]}}, {PFe_Conductivities[2], 14'b00000000000000}};
  assign Gain20_out1[3] = {{2{PFe_Conductivities[3][15]}}, {PFe_Conductivities[3], 14'b00000000000000}};
  assign Gain20_out1[4] = {{2{PFe_Conductivities[4][15]}}, {PFe_Conductivities[4], 14'b00000000000000}};
  assign Gain20_out1[5] = {{2{PFe_Conductivities[5][15]}}, {PFe_Conductivities[5], 14'b00000000000000}};
  assign Gain20_out1[6] = {{2{PFe_Conductivities[6][15]}}, {PFe_Conductivities[6], 14'b00000000000000}};
  assign Gain20_out1[7] = {{2{PFe_Conductivities[7][15]}}, {PFe_Conductivities[7], 14'b00000000000000}};



  INb u_INb (.In1_0(Gain20_out1[0]),  // sfix32_En22
             .In1_1(Gain20_out1[1]),  // sfix32_En22
             .In1_2(Gain20_out1[2]),  // sfix32_En22
             .In1_3(Gain20_out1[3]),  // sfix32_En22
             .In1_4(Gain20_out1[4]),  // sfix32_En22
             .In1_5(Gain20_out1[5]),  // sfix32_En22
             .In1_6(Gain20_out1[6]),  // sfix32_En22
             .In1_7(Gain20_out1[7]),  // sfix32_En22
             .g_0(INb_out1_0),  // sfix16_En8
             .g_1(INb_out1_1),  // sfix16_En8
             .g_2(INb_out1_2),  // sfix16_En8
             .g_3(INb_out1_3),  // sfix16_En8
             .g_4(INb_out1_4),  // sfix16_En8
             .g_5(INb_out1_5),  // sfix16_En8
             .g_6(INb_out1_6),  // sfix16_En8
             .g_7(INb_out1_7)  // sfix16_En8
             );

  assign INb_out1[0] = INb_out1_0;
  assign INb_out1[1] = INb_out1_1;
  assign INb_out1[2] = INb_out1_2;
  assign INb_out1[3] = INb_out1_3;
  assign INb_out1[4] = INb_out1_4;
  assign INb_out1[5] = INb_out1_5;
  assign INb_out1[6] = INb_out1_6;
  assign INb_out1[7] = INb_out1_7;

  assign Add26_v = {{16{INn_out1[15]}}, INn_out1};

  genvar t_0_02;
  generate
    for(t_0_02 = 32'sd0; t_0_02 <= 32'sd7; t_0_02 = t_0_02 + 32'sd1) begin:Add26_out1_gen
      assign Add26_add_cast[t_0_02] = {{16{INb_out1[t_0_02][15]}}, INb_out1[t_0_02]};
      assign Add26_add_temp[t_0_02] = Add26_add_cast[t_0_02] + Add26_v;
      assign Add26_out1[t_0_02] = Add26_add_temp[t_0_02][15:0];
    end
  endgenerate




  assign in0_0 = Add26_out1[0];

  assign in0_1 = Add26_out1[1];

  assign Sum_of_Elements2_stage2_add_cast = {{16{in0_0[15]}}, in0_0};
  assign Sum_of_Elements2_stage2_add_cast_1 = {{16{in0_1[15]}}, in0_1};
  assign Sum_of_Elements2_stage2_add_temp = Sum_of_Elements2_stage2_add_cast + Sum_of_Elements2_stage2_add_cast_1;
  assign Sum_of_Elements2_op_stage1 = Sum_of_Elements2_stage2_add_temp[16:0];



  assign in0_2 = Add26_out1[2];

  assign Sum_of_Elements2_stage3_add_cast = {{15{Sum_of_Elements2_op_stage1[16]}}, Sum_of_Elements2_op_stage1};
  assign Sum_of_Elements2_stage3_add_cast_1 = {{16{in0_2[15]}}, in0_2};
  assign Sum_of_Elements2_stage3_add_temp = Sum_of_Elements2_stage3_add_cast + Sum_of_Elements2_stage3_add_cast_1;
  assign Sum_of_Elements2_op_stage2 = Sum_of_Elements2_stage3_add_temp[17:0];



  assign in0_3 = Add26_out1[3];

  assign Sum_of_Elements2_stage4_add_cast = {{14{Sum_of_Elements2_op_stage2[17]}}, Sum_of_Elements2_op_stage2};
  assign Sum_of_Elements2_stage4_add_cast_1 = {{16{in0_3[15]}}, in0_3};
  assign Sum_of_Elements2_stage4_add_temp = Sum_of_Elements2_stage4_add_cast + Sum_of_Elements2_stage4_add_cast_1;
  assign Sum_of_Elements2_op_stage3 = Sum_of_Elements2_stage4_add_temp[18:0];



  assign in0_4 = Add26_out1[4];

  assign Sum_of_Elements2_stage5_add_cast = {{13{Sum_of_Elements2_op_stage3[18]}}, Sum_of_Elements2_op_stage3};
  assign Sum_of_Elements2_stage5_add_cast_1 = {{16{in0_4[15]}}, in0_4};
  assign Sum_of_Elements2_stage5_add_temp = Sum_of_Elements2_stage5_add_cast + Sum_of_Elements2_stage5_add_cast_1;
  assign Sum_of_Elements2_op_stage4 = Sum_of_Elements2_stage5_add_temp[19:0];



  assign in0_5 = Add26_out1[5];

  assign Sum_of_Elements2_stage6_add_cast = {{12{Sum_of_Elements2_op_stage4[19]}}, Sum_of_Elements2_op_stage4};
  assign Sum_of_Elements2_stage6_add_cast_1 = {{16{in0_5[15]}}, in0_5};
  assign Sum_of_Elements2_stage6_add_temp = Sum_of_Elements2_stage6_add_cast + Sum_of_Elements2_stage6_add_cast_1;
  assign Sum_of_Elements2_op_stage5 = Sum_of_Elements2_stage6_add_temp[20:0];



  assign in0_6 = Add26_out1[6];

  assign Sum_of_Elements2_stage7_add_cast = {{11{Sum_of_Elements2_op_stage5[20]}}, Sum_of_Elements2_op_stage5};
  assign Sum_of_Elements2_stage7_add_cast_1 = {{16{in0_6[15]}}, in0_6};
  assign Sum_of_Elements2_stage7_add_temp = Sum_of_Elements2_stage7_add_cast + Sum_of_Elements2_stage7_add_cast_1;
  assign Sum_of_Elements2_op_stage6 = Sum_of_Elements2_stage7_add_temp[21:0];



  assign in0_7 = Add26_out1[7];

  assign Sum_of_Elements2_stage8_add_cast = {{10{Sum_of_Elements2_op_stage6[21]}}, Sum_of_Elements2_op_stage6};
  assign Sum_of_Elements2_stage8_add_cast_1 = {{16{in0_7[15]}}, in0_7};
  assign Sum_of_Elements2_stage8_add_temp = Sum_of_Elements2_stage8_add_cast + Sum_of_Elements2_stage8_add_cast_1;
  assign Sum_of_Elements2_out1 = Sum_of_Elements2_stage8_add_temp[15:0];



  assign Gain27_out1[0] = 16'sb0000000000000000;
  assign Gain27_mul_temp = 16'sb1111000010100100 * PFe_Conductivities[1];
  assign Gain27_out1[1] = Gain27_mul_temp[29:14];
  assign Gain27_mul_temp_1 = 16'sb0001011100000111 * PFe_Conductivities[2];
  assign Gain27_out1[2] = Gain27_mul_temp_1[29:14];
  assign Gain27_mul_temp_2 = 16'sb0000011110101011 * PFe_Conductivities[3];
  assign Gain27_out1[3] = Gain27_mul_temp_2[29:14];
  assign Gain27_mul_temp_3 = 16'sb0110000000000000 * PFe_Conductivities[4];
  assign Gain27_out1[4] = Gain27_mul_temp_3[29:14];
  assign Gain27_mul_temp_4 = 16'sb0110000000000000 * PFe_Conductivities[5];
  assign Gain27_out1[5] = Gain27_mul_temp_4[29:14];
  assign Gain27_mul_temp_5 = 16'sb0000001111010010 * PFe_Conductivities[6];
  assign Gain27_out1[6] = Gain27_mul_temp_5[29:14];
  assign Gain27_mul_temp_6 = 16'sb0001100110011010 * PFe_Conductivities[7];
  assign Gain27_out1[7] = Gain27_mul_temp_6[29:14];



  assign Gain31_out1[0] = 16'sb0000000000000000;
  assign Gain31_out1[1] = 16'sb0000000000000000;
  assign Gain31_out1[2] = 16'sb0000000000000000;
  assign Gain31_out1[3] = 16'sb0000000000000000;
  assign Gain31_out1[4] = 16'sb0000000000000000;
  assign Gain31_out1[5] = 16'sb0000000000000000;
  assign Gain31_cast = {{2{In1[15]}}, {In1, 14'b00000000000000}};
  assign Gain31_out1[6] = Gain31_cast[29:14];
  assign Gain31_out1[7] = 16'sb0000000000000000;



  assign Gain26_mul_temp = 16'sb1110000101001001 * PFe_Conductivities[0];
  assign Gain26_out1[0] = Gain26_mul_temp[29:14];
  assign Gain26_out1[1] = 16'sb0000000000000000;
  assign Gain26_mul_temp_1 = 16'sb0110000000000000 * PFe_Conductivities[2];
  assign Gain26_out1[2] = Gain26_mul_temp_1[29:14];
  assign Gain26_mul_temp_2 = 16'sb0000111101011001 * PFe_Conductivities[3];
  assign Gain26_out1[3] = Gain26_mul_temp_2[29:14];
  assign Gain26_mul_temp_3 = 16'sb1111111111111101 * PFe_Conductivities[4];
  assign Gain26_out1[4] = Gain26_mul_temp_3[29:14];
  assign Gain26_mul_temp_4 = 16'sb1110110011001011 * PFe_Conductivities[5];
  assign Gain26_out1[5] = Gain26_mul_temp_4[29:14];
  assign Gain26_mul_temp_5 = 16'sb0010111000010011 * PFe_Conductivities[6];
  assign Gain26_out1[6] = Gain26_mul_temp_5[29:14];
  assign Gain26_mul_temp_6 = 16'sb0010100001010010 * PFe_Conductivities[7];
  assign Gain26_out1[7] = Gain26_mul_temp_6[29:14];



  assign Gain36_out1[0] = 16'sb0000000000000000;
  assign Gain36_out1[1] = 16'sb0000000000000000;
  assign Gain36_out1[2] = 16'sb0000000000000000;
  assign Gain36_out1[3] = 16'sb0000000000000000;
  assign Gain36_out1[4] = 16'sb0000000000000000;
  assign Gain36_cast = {{2{In1[15]}}, {In1, 14'b00000000000000}};
  assign Gain36_out1[5] = Gain36_cast[29:14];
  assign Gain36_out1[6] = 16'sb0000000000000000;
  assign Gain36_out1[7] = 16'sb0000000000000000;



  assign Gain25_out1[0] = 16'sb0000000000000000;
  assign Gain25_mul_temp = 16'sb0001110000101001 * PFe_Conductivities[1];
  assign Gain25_out1[1] = Gain25_mul_temp[29:14];
  assign Gain25_mul_temp_1 = 16'sb0001110000100100 * PFe_Conductivities[2];
  assign Gain25_out1[2] = Gain25_mul_temp_1[29:14];
  assign Gain25_mul_temp_2 = 16'sb0110000000000000 * PFe_Conductivities[3];
  assign Gain25_out1[3] = Gain25_mul_temp_2[29:14];
  // CSD Encoding (8192) : 10000000000000; Cost (Adders) = 0
  assign Gain25_1 = {PFe_Conductivities[4], 13'b0000000000000};
  assign Gain25_2 = {{3{Gain25_1[28]}}, Gain25_1};
  assign Gain25_mul_temp_3 =  - (Gain25_2);
  assign Gain25_out1[4] = Gain25_mul_temp_3[29:14];
  assign Gain25_mul_temp_4 = 16'sb0000110101110010 * PFe_Conductivities[5];
  assign Gain25_out1[5] = Gain25_mul_temp_4[29:14];
  assign Gain25_mul_temp_5 = 16'sb0000100110011010 * PFe_Conductivities[6];
  assign Gain25_out1[6] = Gain25_mul_temp_5[29:14];
  assign Gain25_out1[7] = 16'sb0000000000000000;



  assign Gain35_out1[0] = 16'sb0000000000000000;
  assign Gain35_out1[1] = 16'sb0000000000000000;
  assign Gain35_out1[2] = 16'sb0000000000000000;
  assign Gain35_out1[3] = 16'sb0000000000000000;
  assign Gain35_cast = {{2{In1[15]}}, {In1, 14'b00000000000000}};
  assign Gain35_out1[4] = Gain35_cast[29:14];
  assign Gain35_out1[5] = 16'sb0000000000000000;
  assign Gain35_out1[6] = 16'sb0000000000000000;
  assign Gain35_out1[7] = 16'sb0000000000000000;



  assign Gain24_out1[0] = 16'sb0000000000000000;
  assign Gain24_mul_temp = 16'sb1111000010100100 * PFe_Conductivities[1];
  assign Gain24_out1[1] = Gain24_mul_temp[29:14];
  assign Gain24_mul_temp_1 = 16'sb0000011110101011 * PFe_Conductivities[2];
  assign Gain24_out1[2] = Gain24_mul_temp_1[29:14];
  assign Gain24_mul_temp_2 = 16'sb1111111010110101 * PFe_Conductivities[3];
  assign Gain24_out1[3] = Gain24_mul_temp_2[29:14];
  assign Gain24_mul_temp_3 = 16'sb0110000000000000 * PFe_Conductivities[4];
  assign Gain24_out1[4] = Gain24_mul_temp_3[29:14];
  assign Gain24_mul_temp_4 = 16'sb0000111101001101 * PFe_Conductivities[5];
  assign Gain24_out1[5] = Gain24_mul_temp_4[29:14];
  assign Gain24_mul_temp_5 = 16'sb0110000000000000 * PFe_Conductivities[6];
  assign Gain24_out1[6] = Gain24_mul_temp_5[29:14];
  assign Gain24_out1[7] = 16'sb0000000000000000;



  assign Gain34_out1[0] = 16'sb0000000000000000;
  assign Gain34_out1[1] = 16'sb0000000000000000;
  assign Gain34_out1[2] = 16'sb0000000000000000;
  assign Gain34_cast = {{2{In1[15]}}, {In1, 14'b00000000000000}};
  assign Gain34_out1[3] = Gain34_cast[29:14];
  assign Gain34_out1[4] = 16'sb0000000000000000;
  assign Gain34_out1[5] = 16'sb0000000000000000;
  assign Gain34_out1[6] = 16'sb0000000000000000;
  assign Gain34_out1[7] = 16'sb0000000000000000;



  assign Gain23_mul_temp = 16'sb0011001100110001 * PFe_Conductivities[0];
  assign Gain23_out1[0] = Gain23_mul_temp[31:16];
  assign Gain23_mul_temp_1 = 16'sb0110111000010100 * PFe_Conductivities[1];
  assign Gain23_out1[1] = Gain23_mul_temp_1[31:16];
  assign Gain23_mul_temp_2 = 16'sb1010111000010001 * PFe_Conductivities[2];
  assign Gain23_out1[2] = Gain23_mul_temp_2[31:16];
  assign Gain23_mul_temp_3 = 16'sb0010011001100001 * PFe_Conductivities[3];
  assign Gain23_out1[3] = Gain23_mul_temp_3[31:16];
  assign Gain23_mul_temp_4 = 16'sb0100011110110010 * PFe_Conductivities[4];
  assign Gain23_out1[4] = Gain23_mul_temp_4[31:16];
  assign Gain23_mul_temp_5 = 16'sb0110011001100100 * PFe_Conductivities[5];
  assign Gain23_out1[5] = Gain23_mul_temp_5[31:16];
  assign Gain23_mul_temp_6 = 16'sb1111001100111001 * PFe_Conductivities[6];
  assign Gain23_out1[6] = Gain23_mul_temp_6[31:16];
  assign Gain23_out1[7] = 16'sb0000000000000000;



  assign Gain33_out1[0] = 16'sb0000000000000000;
  assign Gain33_out1[1] = 16'sb0000000000000000;
  assign Gain33_cast = {{2{In1[15]}}, {In1, 14'b00000000000000}};
  assign Gain33_out1[2] = Gain33_cast[29:14];
  assign Gain33_out1[3] = 16'sb0000000000000000;
  assign Gain33_out1[4] = 16'sb0000000000000000;
  assign Gain33_out1[5] = 16'sb0000000000000000;
  assign Gain33_out1[6] = 16'sb0000000000000000;
  assign Gain33_out1[7] = 16'sb0000000000000000;



  assign Gain22_mul_temp = 16'sb1111000010100101 * PFe_Conductivities[0];
  assign Gain22_out1[0] = Gain22_mul_temp[29:14];
  assign Gain22_mul_temp_1 = 16'sb1111100001010010 * PFe_Conductivities[1];
  assign Gain22_out1[1] = Gain22_mul_temp_1[29:14];
  assign Gain22_mul_temp_2 = 16'sb0110000000000000 * PFe_Conductivities[2];
  assign Gain22_out1[2] = Gain22_mul_temp_2[29:14];
  assign Gain22_mul_temp_3 = 16'sb0000111101011001 * PFe_Conductivities[3];
  assign Gain22_out1[3] = Gain22_mul_temp_3[29:14];
  assign Gain22_mul_temp_4 = 16'sb0000110011001001 * PFe_Conductivities[4];
  assign Gain22_out1[4] = Gain22_mul_temp_4[29:14];
  assign Gain22_mul_temp_5 = 16'sb0001111101011100 * PFe_Conductivities[5];
  assign Gain22_out1[5] = Gain22_mul_temp_5[29:14];
  assign Gain22_mul_temp_6 = 16'sb1111001100110010 * PFe_Conductivities[6];
  assign Gain22_out1[6] = Gain22_mul_temp_6[29:14];
  assign Gain22_mul_temp_7 = 16'sb1110100011110111 * PFe_Conductivities[7];
  assign Gain22_out1[7] = Gain22_mul_temp_7[29:14];



  assign Gain30_out1[0] = 16'sb0000000000000000;
  assign Gain30_cast = {{2{In1[15]}}, {In1, 14'b00000000000000}};
  assign Gain30_out1[1] = Gain30_cast[29:14];
  assign Gain30_out1[2] = 16'sb0000000000000000;
  assign Gain30_out1[3] = 16'sb0000000000000000;
  assign Gain30_out1[4] = 16'sb0000000000000000;
  assign Gain30_out1[5] = 16'sb0000000000000000;
  assign Gain30_out1[6] = 16'sb0000000000000000;
  assign Gain30_out1[7] = 16'sb0000000000000000;



  assign Gain21_mul_temp = 16'sb1110101110001001 * PFe_Conductivities[0];
  assign Gain21_out1[0] = Gain21_mul_temp[30:15];
  assign Gain21_mul_temp_1 = 16'sb0011010111000011 * PFe_Conductivities[1];
  assign Gain21_out1[1] = Gain21_mul_temp_1[30:15];
  assign Gain21_mul_temp_2 = 16'sb0000101000111001 * PFe_Conductivities[2];
  assign Gain21_out1[2] = Gain21_mul_temp_2[30:15];
  assign Gain21_mul_temp_3 = 16'sb1111000010100100 * PFe_Conductivities[3];
  assign Gain21_out1[3] = Gain21_mul_temp_3[30:15];
  assign Gain21_mul_temp_4 = 16'sb0100001010001111 * PFe_Conductivities[4];
  assign Gain21_out1[4] = Gain21_mul_temp_4[30:15];
  assign Gain21_mul_temp_5 = 16'sb0010001111010111 * PFe_Conductivities[5];
  assign Gain21_out1[5] = Gain21_mul_temp_5[30:15];
  assign Gain21_mul_temp_6 = 16'sb0001000010100101 * PFe_Conductivities[6];
  assign Gain21_out1[6] = Gain21_mul_temp_6[30:15];
  assign Gain21_mul_temp_7 = 16'sb0111110000100000 * PFe_Conductivities[7];
  assign Gain21_out1[7] = Gain21_mul_temp_7[30:15];



  assign Gain29_cast = {{2{In1[15]}}, {In1, 14'b00000000000000}};
  assign Gain29_out1[0] = Gain29_cast[29:14];
  assign Gain29_out1[1] = 16'sb0000000000000000;
  assign Gain29_out1[2] = 16'sb0000000000000000;
  assign Gain29_out1[3] = 16'sb0000000000000000;
  assign Gain29_out1[4] = 16'sb0000000000000000;
  assign Gain29_out1[5] = 16'sb0000000000000000;
  assign Gain29_out1[6] = 16'sb0000000000000000;
  assign Gain29_out1[7] = 16'sb0000000000000000;



  OBJ1 u_OBJ1 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(Gain21_out1[0]),  // sfix16_En8
               .g_e_1(Gain21_out1[1]),  // sfix16_En8
               .g_e_2(Gain21_out1[2]),  // sfix16_En8
               .g_e_3(Gain21_out1[3]),  // sfix16_En8
               .g_e_4(Gain21_out1[4]),  // sfix16_En8
               .g_e_5(Gain21_out1[5]),  // sfix16_En8
               .g_e_6(Gain21_out1[6]),  // sfix16_En8
               .g_e_7(Gain21_out1[7]),  // sfix16_En8
               .g_e_8(Gain29_out1[0]),  // sfix16_En8
               .g_e_9(Gain29_out1[1]),  // sfix16_En8
               .g_e_10(Gain29_out1[2]),  // sfix16_En8
               .g_e_11(Gain29_out1[3]),  // sfix16_En8
               .g_e_12(Gain29_out1[4]),  // sfix16_En8
               .g_e_13(Gain29_out1[5]),  // sfix16_En8
               .g_e_14(Gain29_out1[6]),  // sfix16_En8
               .g_e_15(Gain29_out1[7]),  // sfix16_En8
               .g_i(INa_out1),  // sfix16_En8
               .g(OBJ1_out1)  // sfix16_En8
               );

  OBJ2 u_OBJ2 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(Gain22_out1[0]),  // sfix16_En8
               .g_e_1(Gain22_out1[1]),  // sfix16_En8
               .g_e_2(Gain22_out1[2]),  // sfix16_En8
               .g_e_3(Gain22_out1[3]),  // sfix16_En8
               .g_e_4(Gain22_out1[4]),  // sfix16_En8
               .g_e_5(Gain22_out1[5]),  // sfix16_En8
               .g_e_6(Gain22_out1[6]),  // sfix16_En8
               .g_e_7(Gain22_out1[7]),  // sfix16_En8
               .g_e_8(Gain30_out1[0]),  // sfix16_En8
               .g_e_9(Gain30_out1[1]),  // sfix16_En8
               .g_e_10(Gain30_out1[2]),  // sfix16_En8
               .g_e_11(Gain30_out1[3]),  // sfix16_En8
               .g_e_12(Gain30_out1[4]),  // sfix16_En8
               .g_e_13(Gain30_out1[5]),  // sfix16_En8
               .g_e_14(Gain30_out1[6]),  // sfix16_En8
               .g_e_15(Gain30_out1[7]),  // sfix16_En8
               .g_i(INa_out1),  // sfix16_En8
               .g(OBJ2_out1)  // sfix16_En8
               );

  OBJ3 u_OBJ3 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(Gain23_out1[0]),  // sfix16_En8
               .g_e_1(Gain23_out1[1]),  // sfix16_En8
               .g_e_2(Gain23_out1[2]),  // sfix16_En8
               .g_e_3(Gain23_out1[3]),  // sfix16_En8
               .g_e_4(Gain23_out1[4]),  // sfix16_En8
               .g_e_5(Gain23_out1[5]),  // sfix16_En8
               .g_e_6(Gain23_out1[6]),  // sfix16_En8
               .g_e_7(Gain23_out1[7]),  // sfix16_En8
               .g_e_8(Gain33_out1[0]),  // sfix16_En8
               .g_e_9(Gain33_out1[1]),  // sfix16_En8
               .g_e_10(Gain33_out1[2]),  // sfix16_En8
               .g_e_11(Gain33_out1[3]),  // sfix16_En8
               .g_e_12(Gain33_out1[4]),  // sfix16_En8
               .g_e_13(Gain33_out1[5]),  // sfix16_En8
               .g_e_14(Gain33_out1[6]),  // sfix16_En8
               .g_e_15(Gain33_out1[7]),  // sfix16_En8
               .g_i(INa_out1),  // sfix16_En8
               .g(OBJ3_out1)  // sfix16_En8
               );

  OBJ4 u_OBJ4 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(Gain24_out1[0]),  // sfix16_En8
               .g_e_1(Gain24_out1[1]),  // sfix16_En8
               .g_e_2(Gain24_out1[2]),  // sfix16_En8
               .g_e_3(Gain24_out1[3]),  // sfix16_En8
               .g_e_4(Gain24_out1[4]),  // sfix16_En8
               .g_e_5(Gain24_out1[5]),  // sfix16_En8
               .g_e_6(Gain24_out1[6]),  // sfix16_En8
               .g_e_7(Gain24_out1[7]),  // sfix16_En8
               .g_e_8(Gain34_out1[0]),  // sfix16_En8
               .g_e_9(Gain34_out1[1]),  // sfix16_En8
               .g_e_10(Gain34_out1[2]),  // sfix16_En8
               .g_e_11(Gain34_out1[3]),  // sfix16_En8
               .g_e_12(Gain34_out1[4]),  // sfix16_En8
               .g_e_13(Gain34_out1[5]),  // sfix16_En8
               .g_e_14(Gain34_out1[6]),  // sfix16_En8
               .g_e_15(Gain34_out1[7]),  // sfix16_En8
               .g_i(INa_out1),  // sfix16_En8
               .g(OBJ4_out1)  // sfix16_En8
               );

  OBJ5 u_OBJ5 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(Gain25_out1[0]),  // sfix16_En8
               .g_e_1(Gain25_out1[1]),  // sfix16_En8
               .g_e_2(Gain25_out1[2]),  // sfix16_En8
               .g_e_3(Gain25_out1[3]),  // sfix16_En8
               .g_e_4(Gain25_out1[4]),  // sfix16_En8
               .g_e_5(Gain25_out1[5]),  // sfix16_En8
               .g_e_6(Gain25_out1[6]),  // sfix16_En8
               .g_e_7(Gain25_out1[7]),  // sfix16_En8
               .g_e_8(Gain35_out1[0]),  // sfix16_En8
               .g_e_9(Gain35_out1[1]),  // sfix16_En8
               .g_e_10(Gain35_out1[2]),  // sfix16_En8
               .g_e_11(Gain35_out1[3]),  // sfix16_En8
               .g_e_12(Gain35_out1[4]),  // sfix16_En8
               .g_e_13(Gain35_out1[5]),  // sfix16_En8
               .g_e_14(Gain35_out1[6]),  // sfix16_En8
               .g_e_15(Gain35_out1[7]),  // sfix16_En8
               .g_i(INa_out1),  // sfix16_En8
               .g(OBJ5_out1)  // sfix16_En8
               );

  OBJ6 u_OBJ6 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(Gain26_out1[0]),  // sfix16_En8
               .g_e_1(Gain26_out1[1]),  // sfix16_En8
               .g_e_2(Gain26_out1[2]),  // sfix16_En8
               .g_e_3(Gain26_out1[3]),  // sfix16_En8
               .g_e_4(Gain26_out1[4]),  // sfix16_En8
               .g_e_5(Gain26_out1[5]),  // sfix16_En8
               .g_e_6(Gain26_out1[6]),  // sfix16_En8
               .g_e_7(Gain26_out1[7]),  // sfix16_En8
               .g_e_8(Gain36_out1[0]),  // sfix16_En8
               .g_e_9(Gain36_out1[1]),  // sfix16_En8
               .g_e_10(Gain36_out1[2]),  // sfix16_En8
               .g_e_11(Gain36_out1[3]),  // sfix16_En8
               .g_e_12(Gain36_out1[4]),  // sfix16_En8
               .g_e_13(Gain36_out1[5]),  // sfix16_En8
               .g_e_14(Gain36_out1[6]),  // sfix16_En8
               .g_e_15(Gain36_out1[7]),  // sfix16_En8
               .g_i(INa_out1),  // sfix16_En8
               .g(OBJ6_out1)  // sfix16_En8
               );

  OBJ7 u_OBJ7 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(Gain27_out1[0]),  // sfix16_En8
               .g_e_1(Gain27_out1[1]),  // sfix16_En8
               .g_e_2(Gain27_out1[2]),  // sfix16_En8
               .g_e_3(Gain27_out1[3]),  // sfix16_En8
               .g_e_4(Gain27_out1[4]),  // sfix16_En8
               .g_e_5(Gain27_out1[5]),  // sfix16_En8
               .g_e_6(Gain27_out1[6]),  // sfix16_En8
               .g_e_7(Gain27_out1[7]),  // sfix16_En8
               .g_e_8(Gain31_out1[0]),  // sfix16_En8
               .g_e_9(Gain31_out1[1]),  // sfix16_En8
               .g_e_10(Gain31_out1[2]),  // sfix16_En8
               .g_e_11(Gain31_out1[3]),  // sfix16_En8
               .g_e_12(Gain31_out1[4]),  // sfix16_En8
               .g_e_13(Gain31_out1[5]),  // sfix16_En8
               .g_e_14(Gain31_out1[6]),  // sfix16_En8
               .g_e_15(Gain31_out1[7]),  // sfix16_En8
               .g_i(INa_out1),  // sfix16_En8
               .g(OBJ7_out1)  // sfix16_En8
               );

  assign in0_7_1 = Gain18_out1[7];

  assign in0_6_1 = Gain18_out1[6];

  assign in0_5_1 = Gain18_out1[5];

  assign in0_4_1 = Gain18_out1[4];

  assign in0_3_1 = Gain18_out1[3];

  assign in0_2_1 = Gain18_out1[2];

  assign in0_1_1 = Gain18_out1[1];

  assign Gain18_out1[0] = {{2{OBJ_Conductivities[0][15]}}, {OBJ_Conductivities[0], 14'b00000000000000}};
  assign Gain18_out1[1] = {{2{OBJ_Conductivities[1][15]}}, {OBJ_Conductivities[1], 14'b00000000000000}};
  assign Gain18_out1[2] = {{2{OBJ_Conductivities[2][15]}}, {OBJ_Conductivities[2], 14'b00000000000000}};
  assign Gain18_out1[3] = {{2{OBJ_Conductivities[3][15]}}, {OBJ_Conductivities[3], 14'b00000000000000}};
  assign Gain18_out1[4] = {{2{OBJ_Conductivities[4][15]}}, {OBJ_Conductivities[4], 14'b00000000000000}};
  assign Gain18_out1[5] = {{2{OBJ_Conductivities[5][15]}}, {OBJ_Conductivities[5], 14'b00000000000000}};
  assign Gain18_out1[6] = {{2{OBJ_Conductivities[6][15]}}, {OBJ_Conductivities[6], 14'b00000000000000}};
  assign Gain18_out1[7] = {{2{OBJ_Conductivities[7][15]}}, {OBJ_Conductivities[7], 14'b00000000000000}};



  assign in0_0_1 = Gain18_out1[0];

  assign Sum_of_Elements1_stage2_add_temp = in0_0_1 + in0_1_1;
  assign Sum_of_Elements1_op_stage1 = {Sum_of_Elements1_stage2_add_temp[31], Sum_of_Elements1_stage2_add_temp};



  assign Sum_of_Elements1_stage3_add_cast = Sum_of_Elements1_op_stage1[31:0];
  assign Sum_of_Elements1_stage3_add_temp = Sum_of_Elements1_stage3_add_cast + in0_2_1;
  assign Sum_of_Elements1_op_stage2 = {{2{Sum_of_Elements1_stage3_add_temp[31]}}, Sum_of_Elements1_stage3_add_temp};



  assign Sum_of_Elements1_stage4_add_cast = Sum_of_Elements1_op_stage2[31:0];
  assign Sum_of_Elements1_stage4_add_temp = Sum_of_Elements1_stage4_add_cast + in0_3_1;
  assign Sum_of_Elements1_op_stage3 = {{3{Sum_of_Elements1_stage4_add_temp[31]}}, Sum_of_Elements1_stage4_add_temp};



  assign Sum_of_Elements1_stage5_add_cast = Sum_of_Elements1_op_stage3[31:0];
  assign Sum_of_Elements1_stage5_add_temp = Sum_of_Elements1_stage5_add_cast + in0_4_1;
  assign Sum_of_Elements1_op_stage4 = {{4{Sum_of_Elements1_stage5_add_temp[31]}}, Sum_of_Elements1_stage5_add_temp};



  assign Sum_of_Elements1_stage6_add_cast = Sum_of_Elements1_op_stage4[31:0];
  assign Sum_of_Elements1_stage6_add_temp = Sum_of_Elements1_stage6_add_cast + in0_5_1;
  assign Sum_of_Elements1_op_stage5 = {{5{Sum_of_Elements1_stage6_add_temp[31]}}, Sum_of_Elements1_stage6_add_temp};



  assign Sum_of_Elements1_stage7_add_cast = Sum_of_Elements1_op_stage5[31:0];
  assign Sum_of_Elements1_stage7_add_temp = Sum_of_Elements1_stage7_add_cast + in0_6_1;
  assign Sum_of_Elements1_op_stage6 = {{6{Sum_of_Elements1_stage7_add_temp[31]}}, Sum_of_Elements1_stage7_add_temp};



  assign Sum_of_Elements1_stage8_add_cast = Sum_of_Elements1_op_stage6[31:0];
  assign Sum_of_Elements1_out1 = Sum_of_Elements1_stage8_add_cast + in0_7_1;



  INa u_INa (.In1(Sum_of_Elements1_out1),  // sfix32_En22
             .In2(Sum_of_Elements2_out1),  // sfix16_En8
             .g(INa_out1)  // sfix16_En8
             );

  OBJ8 u_OBJ8 (.clk(clk),
               .reset(reset),
               .enb(clk_enable),
               .g_e_0(Gain28_out1[0]),  // sfix16_En8
               .g_e_1(Gain28_out1[1]),  // sfix16_En8
               .g_e_2(Gain28_out1[2]),  // sfix16_En8
               .g_e_3(Gain28_out1[3]),  // sfix16_En8
               .g_e_4(Gain28_out1[4]),  // sfix16_En8
               .g_e_5(Gain28_out1[5]),  // sfix16_En8
               .g_e_6(Gain28_out1[6]),  // sfix16_En8
               .g_e_7(Gain28_out1[7]),  // sfix16_En8
               .g_e_8(Gain32_out1[0]),  // sfix16_En8
               .g_e_9(Gain32_out1[1]),  // sfix16_En8
               .g_e_10(Gain32_out1[2]),  // sfix16_En8
               .g_e_11(Gain32_out1[3]),  // sfix16_En8
               .g_e_12(Gain32_out1[4]),  // sfix16_En8
               .g_e_13(Gain32_out1[5]),  // sfix16_En8
               .g_e_14(Gain32_out1[6]),  // sfix16_En8
               .g_e_15(Gain32_out1[7]),  // sfix16_En8
               .g_i(INa_out1),  // sfix16_En8
               .g(OBJ8_out1)  // sfix16_En8
               );

  assign OBJ_Conductivities[0] = OBJ8_out1;
  assign OBJ_Conductivities[1] = OBJ7_out1;
  assign OBJ_Conductivities[2] = OBJ6_out1;
  assign OBJ_Conductivities[3] = OBJ5_out1;
  assign OBJ_Conductivities[4] = OBJ4_out1;
  assign OBJ_Conductivities[5] = OBJ3_out1;
  assign OBJ_Conductivities[6] = OBJ2_out1;
  assign OBJ_Conductivities[7] = OBJ1_out1;

  assign Gain17_out1[0] = 32'sb00000000000000000000000000000000;
  assign Gain17_out1[1] = 32'sb00000000000000000000000000000000;
  assign Gain17_out1[2] = 32'sb00000000000000000000000000000000;
  assign Gain17_out1[3] = 32'sb00000000000000000000000000000000;
  assign Gain17_out1[4] = 32'sb00000000000000000000000000000000;
  assign Gain17_out1[5] = 16'sb0011100001010010 * OBJ_Conductivities[5];
  assign Gain17_out1[6] = {{2{OBJ_Conductivities[6][15]}}, {OBJ_Conductivities[6], 14'b00000000000000}};
  assign Gain17_out1[7] = 32'sb00000000000000000000000000000000;



  assign Gain16_out1[0] = 32'sb00000000000000000000000000000000;
  assign Gain16_out1[1] = 32'sb00000000000000000000000000000000;
  assign Gain16_out1[2] = 32'sb00000000000000000000000000000000;
  assign Gain16_out1[3] = 32'sb00000000000000000000000000000000;
  assign Gain16_out1[4] = 32'sb00000000000000000000000000000000;
  assign Gain16_out1[5] = 16'sb0111010111000011 * OBJ_Conductivities[5];
  assign Gain16_out1[6] = 16'sb0101110000101001 * OBJ_Conductivities[6];
  assign Gain16_out1[7] = 16'sb0101011100001010 * OBJ_Conductivities[7];



  assign Gain15_out1[0] = 16'sb0110000000000000 * OBJ_Conductivities[0];
  assign Gain15_out1[1] = 16'sb0110000000000000 * OBJ_Conductivities[1];
  assign Gain15_out1[2] = 16'sb0110000000000000 * OBJ_Conductivities[2];
  assign Gain15_out1[3] = 16'sb0110000000000000 * OBJ_Conductivities[3];
  assign Gain15_out1[4] = 16'sb0110000000000000 * OBJ_Conductivities[4];
  assign Gain15_out1[5] = 16'sb0110000000000000 * OBJ_Conductivities[5];
  assign Gain15_out1[6] = 16'sb0110000000000000 * OBJ_Conductivities[6];
  assign Gain15_out1[7] = 16'sb0110000000000000 * OBJ_Conductivities[7];



  assign Gain14_out1[0] = 32'sb00000000000000000000000000000000;
  assign Gain14_out1[1] = 32'sb00000000000000000000000000000000;
  assign Gain14_out1[2] = 32'sb00000000000000000000000000000000;
  assign Gain14_out1[3] = 16'sb0111000010100100 * OBJ_Conductivities[3];
  assign Gain14_out1[4] = 32'sb00000000000000000000000000000000;
  assign Gain14_out1[5] = 16'sb0111010111000011 * OBJ_Conductivities[5];
  assign Gain14_out1[6] = 32'sb00000000000000000000000000000000;
  assign Gain14_out1[7] = 32'sb00000000000000000000000000000000;



  assign Gain13_out1[0] = 16'sb0000010100011111 * OBJ_Conductivities[0];
  assign Gain13_out1[1] = 16'sb0110000000000000 * OBJ_Conductivities[1];
  assign Gain13_out1[2] = 16'sb0011000010011111 * OBJ_Conductivities[2];
  assign Gain13_out1[3] = 16'sb0110000000000000 * OBJ_Conductivities[3];
  assign Gain13_out1[4] = 16'sb0001011110101011 * OBJ_Conductivities[4];
  assign Gain13_out1[5] = 16'sb0110000000000000 * OBJ_Conductivities[5];
  assign Gain13_out1[6] = 16'sb0010001010001000 * OBJ_Conductivities[6];
  assign Gain13_out1[7] = 16'sb0100001010001001 * OBJ_Conductivities[7];



  assign Gain12_out1[0] = 16'sb0001111010110110 * OBJ_Conductivities[0];
  assign Gain12_out1[1] = 16'sb0001010001110001 * OBJ_Conductivities[1];
  assign Gain12_out1[2] = 16'sb0110000000000000 * OBJ_Conductivities[2];
  assign Gain12_out1[3] = 16'sb0101100001010010 * OBJ_Conductivities[3];
  assign Gain12_out1[4] = 16'sb0101100001010010 * OBJ_Conductivities[4];
  assign Gain12_out1[5] = 16'sb0010100011101010 * OBJ_Conductivities[5];
  assign Gain12_out1[6] = 16'sb0101100001010010 * OBJ_Conductivities[6];
  assign Gain12_out1[7] = 16'sb0010100011110000 * OBJ_Conductivities[7];



  assign Gain11_out1[0] = 16'sb0001100110011001 * OBJ_Conductivities[0];
  assign Gain11_out1[1] = 16'sb0000011110101001 * OBJ_Conductivities[1];
  assign Gain11_out1[2] = 16'sb0110000000000000 * OBJ_Conductivities[2];
  assign Gain11_out1[3] = 16'sb0101100001010010 * OBJ_Conductivities[3];
  assign Gain11_out1[4] = 16'sb0101100001010010 * OBJ_Conductivities[4];
  assign Gain11_out1[5] = 16'sb0001010001110100 * OBJ_Conductivities[5];
  assign Gain11_out1[6] = 16'sb0011100001001111 * OBJ_Conductivities[6];
  assign Gain11_out1[7] = 16'sb0000110011001100 * OBJ_Conductivities[7];



  assign Gain10_out1[0] = 32'sb00000000000000000000000000000000;
  assign Gain10_out1[1] = 32'sb00000000000000000000000000000000;
  assign Gain10_out1[2] = 16'sb0110101110000101 * OBJ_Conductivities[2];
  assign Gain10_out1[3] = 32'sb00000000000000000000000000000000;
  assign Gain10_out1[4] = 32'sb00000000000000000000000000000000;
  assign Gain10_out1[5] = 16'sb0111000010100100 * OBJ_Conductivities[5];
  assign Gain10_out1[6] = 16'sb0110101110000101 * OBJ_Conductivities[6];
  assign Gain10_out1[7] = 32'sb00000000000000000000000000000000;



  assign Gain9_out1[0] = 32'sb00000000000000000000000000000000;
  assign Gain9_out1[1] = 32'sb00000000000000000000000000000000;
  assign Gain9_out1[2] = 16'sb0111101011100001 * OBJ_Conductivities[2];
  assign Gain9_out1[3] = 32'sb00000000000000000000000000000000;
  assign Gain9_out1[4] = 32'sb00000000000000000000000000000000;
  assign Gain9_out1[5] = 16'sb0110000101001000 * OBJ_Conductivities[5];
  assign Gain9_out1[6] = 16'sb0110000101001000 * OBJ_Conductivities[6];
  assign Gain9_out1[7] = 32'sb00000000000000000000000000000000;



  assign Gain8_out1[0] = 16'sb0000010100011111 * OBJ_Conductivities[0];
  assign Gain8_out1[1] = 16'sb0110000000000000 * OBJ_Conductivities[1];
  assign Gain8_out1[2] = 16'sb0011111010110011 * OBJ_Conductivities[2];
  assign Gain8_out1[3] = 16'sb0101100110010001 * OBJ_Conductivities[3];
  assign Gain8_out1[4] = 16'sb0000110011001010 * OBJ_Conductivities[4];
  assign Gain8_out1[5] = 16'sb0110000000000000 * OBJ_Conductivities[5];
  assign Gain8_out1[6] = 16'sb0010001010001000 * OBJ_Conductivities[6];
  assign Gain8_out1[7] = 16'sb0100011110101000 * OBJ_Conductivities[7];



  assign Gain7_out1[0] = 32'sb00000000000000000000000000000000;
  assign Gain7_out1[1] = 32'sb00000000000000000000000000000000;
  assign Gain7_out1[2] = 32'sb00000000000000000000000000000000;
  assign Gain7_out1[3] = 32'sb00000000000000000000000000000000;
  assign Gain7_out1[4] = 16'sb0110011001100110 * OBJ_Conductivities[4];
  assign Gain7_out1[5] = 16'sb0110011001100110 * OBJ_Conductivities[5];
  assign Gain7_out1[6] = 32'sb00000000000000000000000000000000;
  assign Gain7_out1[7] = 32'sb00000000000000000000000000000000;



  assign Gain6_out1[0] = 16'sb0001111010111001 * OBJ_Conductivities[0];
  assign Gain6_out1[1] = 16'sb1111000010100100 * OBJ_Conductivities[1];
  assign Gain6_out1[2] = 16'sb0101111111111011 * OBJ_Conductivities[2];
  assign Gain6_out1[3] = 16'sb1110000101001010 * OBJ_Conductivities[3];
  assign Gain6_out1[4] = 16'sb1110101110000111 * OBJ_Conductivities[4];
  assign Gain6_out1[5] = 16'sb0001101011011111 * OBJ_Conductivities[5];
  assign Gain6_out1[6] = 16'sb1111101011011110 * OBJ_Conductivities[6];
  assign Gain6_out1[7] = 16'sb0110101101111011 * OBJ_Conductivities[7];



  assign Gain5_out1[0] = 16'sb0000111010111000 * OBJ_Conductivities[0];
  assign Gain5_out1[1] = 16'sb0000010100011011 * OBJ_Conductivities[1];
  assign Gain5_out1[2] = 16'sb0010111010110111 * OBJ_Conductivities[2];
  assign Gain5_out1[3] = 16'sb1110110011001100 * OBJ_Conductivities[3];
  assign Gain5_out1[4] = 16'sb0110000000000000 * OBJ_Conductivities[4];
  assign Gain5_out1[5] = 16'sb1111110101101110 * OBJ_Conductivities[5];
  assign Gain5_out1[6] = 16'sb1110110000101010 * OBJ_Conductivities[6];
  assign Gain5_out1[7] = 16'sb0010011001100100 * OBJ_Conductivities[7];



  assign Gain4_out1[0] = 32'sb00000000000000000000000000000000;
  assign Gain4_out1[1] = 16'sb0110011001100110 * OBJ_Conductivities[1];
  assign Gain4_out1[2] = 32'sb00000000000000000000000000000000;
  assign Gain4_out1[3] = 32'sb00000000000000000000000000000000;
  assign Gain4_out1[4] = 16'sb0101011100001010 * OBJ_Conductivities[4];
  assign Gain4_out1[5] = 32'sb00000000000000000000000000000000;
  assign Gain4_out1[6] = 16'sb0111000010100100 * OBJ_Conductivities[6];
  assign Gain4_out1[7] = 32'sb00000000000000000000000000000000;



  assign Gain3_out1[0] = 16'sb0000101000111100 * OBJ_Conductivities[0];
  assign Gain3_out1[1] = 16'sb1111111010110100 * OBJ_Conductivities[1];
  assign Gain3_out1[2] = 16'sb0011100001001001 * OBJ_Conductivities[2];
  assign Gain3_out1[3] = 16'sb0101100001010010 * OBJ_Conductivities[3];
  assign Gain3_out1[4] = 16'sb0010000101000010 * OBJ_Conductivities[4];
  assign Gain3_out1[5] = 16'sb0100011001100101 * OBJ_Conductivities[5];
  assign Gain3_out1[6] = 16'sb0011000101000000 * OBJ_Conductivities[6];
  assign Gain3_out1[7] = 16'sb0100100110010001 * OBJ_Conductivities[7];



  assign Gain2_out1[0] = 32'sb00000000000000000000000000000000;
  assign Gain2_out1[1] = 16'sb0110101110000101 * OBJ_Conductivities[1];
  assign Gain2_out1[2] = 32'sb00000000000000000000000000000000;
  assign Gain2_out1[3] = 16'sb0111000010100100 * OBJ_Conductivities[3];
  assign Gain2_out1[4] = 32'sb00000000000000000000000000000000;
  assign Gain2_out1[5] = 32'sb00000000000000000000000000000000;
  assign Gain2_out1[6] = 32'sb00000000000000000000000000000000;
  assign Gain2_out1[7] = 16'sb0110000101001000 * OBJ_Conductivities[7];



  assign Gain1_out1[0] = 32'sb00000000000000000000000000000000;
  assign Gain1_out1[1] = 32'sb00000000000000000000000000000000;
  assign Gain1_out1[2] = 32'sb00000000000000000000000000000000;
  assign Gain1_out1[3] = 32'sb00000000000000000000000000000000;
  assign Gain1_out1[4] = 16'sb0101000111101100 * OBJ_Conductivities[4];
  assign Gain1_out1[5] = 32'sb00000000000000000000000000000000;
  assign Gain1_out1[6] = 16'sb0101110000101001 * OBJ_Conductivities[6];
  assign Gain1_out1[7] = 32'sb00000000000000000000000000000000;



  assign Gain_out1[0] = 16'sb0100100011101010 * OBJ_Conductivities[0];
  assign Gain_out1[1] = 16'sb0110000000000000 * OBJ_Conductivities[1];
  assign Gain_out1[2] = 16'sb0110000000000000 * OBJ_Conductivities[2];
  assign Gain_out1[3] = 16'sb0110000000000000 * OBJ_Conductivities[3];
  assign Gain_out1[4] = 16'sb0110000000000000 * OBJ_Conductivities[4];
  assign Gain_out1[5] = 16'sb0110000000000000 * OBJ_Conductivities[5];
  assign Gain_out1[6] = 16'sb0110000000000000 * OBJ_Conductivities[6];
  assign Gain_out1[7] = 16'sb0101011100000000 * OBJ_Conductivities[7];



  HDPC1 u_HDPC1 (.clk(clk),
                 .reset(reset),
                 .enb(clk_enable),
                 .g_e_0(Gain_out1[0]),  // sfix32_En22
                 .g_e_1(Gain_out1[1]),  // sfix32_En22
                 .g_e_2(Gain_out1[2]),  // sfix32_En22
                 .g_e_3(Gain_out1[3]),  // sfix32_En22
                 .g_e_4(Gain_out1[4]),  // sfix32_En22
                 .g_e_5(Gain_out1[5]),  // sfix32_En22
                 .g_e_6(Gain_out1[6]),  // sfix32_En22
                 .g_e_7(Gain_out1[7]),  // sfix32_En22
                 .g_i_0(Add1_out1[0]),  // sfix16_En8
                 .g_i_1(Add1_out1[1]),  // sfix16_En8
                 .g_i_2(Add1_out1[2]),  // sfix16_En8
                 .g_i_3(Add1_out1[3]),  // sfix16_En8
                 .g_i_4(Add1_out1[4]),  // sfix16_En8
                 .g_i_5(Add1_out1[5]),  // sfix16_En8
                 .g_i_6(Add1_out1[6]),  // sfix16_En8
                 .g_i_7(Add1_out1[7]),  // sfix16_En8
                 .g(HDPC1_out1)  // sfix16_En8
                 );

  HDPC2 u_HDPC2 (.clk(clk),
                 .reset(reset),
                 .enb(clk_enable),
                 .g_e_0(Gain1_out1[0]),  // sfix32_En25
                 .g_e_1(Gain1_out1[1]),  // sfix32_En25
                 .g_e_2(Gain1_out1[2]),  // sfix32_En25
                 .g_e_3(Gain1_out1[3]),  // sfix32_En25
                 .g_e_4(Gain1_out1[4]),  // sfix32_En25
                 .g_e_5(Gain1_out1[5]),  // sfix32_En25
                 .g_e_6(Gain1_out1[6]),  // sfix32_En25
                 .g_e_7(Gain1_out1[7]),  // sfix32_En25
                 .g_i_0(Add1_out1[0]),  // sfix16_En8
                 .g_i_1(Add1_out1[1]),  // sfix16_En8
                 .g_i_2(Add1_out1[2]),  // sfix16_En8
                 .g_i_3(Add1_out1[3]),  // sfix16_En8
                 .g_i_4(Add1_out1[4]),  // sfix16_En8
                 .g_i_5(Add1_out1[5]),  // sfix16_En8
                 .g_i_6(Add1_out1[6]),  // sfix16_En8
                 .g_i_7(Add1_out1[7]),  // sfix16_En8
                 .g(HDPC2_out1)  // sfix16_En8
                 );

  HDPC3 u_HDPC3 (.clk(clk),
                 .reset(reset),
                 .enb(clk_enable),
                 .g_e_0(Gain2_out1[0]),  // sfix32_En25
                 .g_e_1(Gain2_out1[1]),  // sfix32_En25
                 .g_e_2(Gain2_out1[2]),  // sfix32_En25
                 .g_e_3(Gain2_out1[3]),  // sfix32_En25
                 .g_e_4(Gain2_out1[4]),  // sfix32_En25
                 .g_e_5(Gain2_out1[5]),  // sfix32_En25
                 .g_e_6(Gain2_out1[6]),  // sfix32_En25
                 .g_e_7(Gain2_out1[7]),  // sfix32_En25
                 .g_i_0(Add1_out1[0]),  // sfix16_En8
                 .g_i_1(Add1_out1[1]),  // sfix16_En8
                 .g_i_2(Add1_out1[2]),  // sfix16_En8
                 .g_i_3(Add1_out1[3]),  // sfix16_En8
                 .g_i_4(Add1_out1[4]),  // sfix16_En8
                 .g_i_5(Add1_out1[5]),  // sfix16_En8
                 .g_i_6(Add1_out1[6]),  // sfix16_En8
                 .g_i_7(Add1_out1[7]),  // sfix16_En8
                 .g(HDPC3_out1)  // sfix16_En8
                 );

  HDPC4 u_HDPC4 (.clk(clk),
                 .reset(reset),
                 .enb(clk_enable),
                 .g_e_0(Gain3_out1[0]),  // sfix32_En22
                 .g_e_1(Gain3_out1[1]),  // sfix32_En22
                 .g_e_2(Gain3_out1[2]),  // sfix32_En22
                 .g_e_3(Gain3_out1[3]),  // sfix32_En22
                 .g_e_4(Gain3_out1[4]),  // sfix32_En22
                 .g_e_5(Gain3_out1[5]),  // sfix32_En22
                 .g_e_6(Gain3_out1[6]),  // sfix32_En22
                 .g_e_7(Gain3_out1[7]),  // sfix32_En22
                 .g_i_0(Add1_out1[0]),  // sfix16_En8
                 .g_i_1(Add1_out1[1]),  // sfix16_En8
                 .g_i_2(Add1_out1[2]),  // sfix16_En8
                 .g_i_3(Add1_out1[3]),  // sfix16_En8
                 .g_i_4(Add1_out1[4]),  // sfix16_En8
                 .g_i_5(Add1_out1[5]),  // sfix16_En8
                 .g_i_6(Add1_out1[6]),  // sfix16_En8
                 .g_i_7(Add1_out1[7]),  // sfix16_En8
                 .g(HDPC4_out1)  // sfix16_En8
                 );

  HDPC5 u_HDPC5 (.clk(clk),
                 .reset(reset),
                 .enb(clk_enable),
                 .g_e_0(Gain4_out1[0]),  // sfix32_En25
                 .g_e_1(Gain4_out1[1]),  // sfix32_En25
                 .g_e_2(Gain4_out1[2]),  // sfix32_En25
                 .g_e_3(Gain4_out1[3]),  // sfix32_En25
                 .g_e_4(Gain4_out1[4]),  // sfix32_En25
                 .g_e_5(Gain4_out1[5]),  // sfix32_En25
                 .g_e_6(Gain4_out1[6]),  // sfix32_En25
                 .g_e_7(Gain4_out1[7]),  // sfix32_En25
                 .g_i_0(Add1_out1[0]),  // sfix16_En8
                 .g_i_1(Add1_out1[1]),  // sfix16_En8
                 .g_i_2(Add1_out1[2]),  // sfix16_En8
                 .g_i_3(Add1_out1[3]),  // sfix16_En8
                 .g_i_4(Add1_out1[4]),  // sfix16_En8
                 .g_i_5(Add1_out1[5]),  // sfix16_En8
                 .g_i_6(Add1_out1[6]),  // sfix16_En8
                 .g_i_7(Add1_out1[7]),  // sfix16_En8
                 .g(HDPC5_out1)  // sfix16_En8
                 );

  HDPC6 u_HDPC6 (.clk(clk),
                 .reset(reset),
                 .enb(clk_enable),
                 .g_e_0(Gain5_out1[0]),  // sfix32_En22
                 .g_e_1(Gain5_out1[1]),  // sfix32_En22
                 .g_e_2(Gain5_out1[2]),  // sfix32_En22
                 .g_e_3(Gain5_out1[3]),  // sfix32_En22
                 .g_e_4(Gain5_out1[4]),  // sfix32_En22
                 .g_e_5(Gain5_out1[5]),  // sfix32_En22
                 .g_e_6(Gain5_out1[6]),  // sfix32_En22
                 .g_e_7(Gain5_out1[7]),  // sfix32_En22
                 .g_i_0(Add1_out1[0]),  // sfix16_En8
                 .g_i_1(Add1_out1[1]),  // sfix16_En8
                 .g_i_2(Add1_out1[2]),  // sfix16_En8
                 .g_i_3(Add1_out1[3]),  // sfix16_En8
                 .g_i_4(Add1_out1[4]),  // sfix16_En8
                 .g_i_5(Add1_out1[5]),  // sfix16_En8
                 .g_i_6(Add1_out1[6]),  // sfix16_En8
                 .g_i_7(Add1_out1[7]),  // sfix16_En8
                 .g(HDPC6_out1)  // sfix16_En8
                 );

  HDPC7 u_HDPC7 (.clk(clk),
                 .reset(reset),
                 .enb(clk_enable),
                 .g_e_0(Gain6_out1[0]),  // sfix32_En23
                 .g_e_1(Gain6_out1[1]),  // sfix32_En23
                 .g_e_2(Gain6_out1[2]),  // sfix32_En23
                 .g_e_3(Gain6_out1[3]),  // sfix32_En23
                 .g_e_4(Gain6_out1[4]),  // sfix32_En23
                 .g_e_5(Gain6_out1[5]),  // sfix32_En23
                 .g_e_6(Gain6_out1[6]),  // sfix32_En23
                 .g_e_7(Gain6_out1[7]),  // sfix32_En23
                 .g_i_0(Add1_out1[0]),  // sfix16_En8
                 .g_i_1(Add1_out1[1]),  // sfix16_En8
                 .g_i_2(Add1_out1[2]),  // sfix16_En8
                 .g_i_3(Add1_out1[3]),  // sfix16_En8
                 .g_i_4(Add1_out1[4]),  // sfix16_En8
                 .g_i_5(Add1_out1[5]),  // sfix16_En8
                 .g_i_6(Add1_out1[6]),  // sfix16_En8
                 .g_i_7(Add1_out1[7]),  // sfix16_En8
                 .g(HDPC7_out1)  // sfix16_En8
                 );

  HDPC8 u_HDPC8 (.clk(clk),
                 .reset(reset),
                 .enb(clk_enable),
                 .g_e_0(Gain7_out1[0]),  // sfix32_En25
                 .g_e_1(Gain7_out1[1]),  // sfix32_En25
                 .g_e_2(Gain7_out1[2]),  // sfix32_En25
                 .g_e_3(Gain7_out1[3]),  // sfix32_En25
                 .g_e_4(Gain7_out1[4]),  // sfix32_En25
                 .g_e_5(Gain7_out1[5]),  // sfix32_En25
                 .g_e_6(Gain7_out1[6]),  // sfix32_En25
                 .g_e_7(Gain7_out1[7]),  // sfix32_En25
                 .g_i_0(Add1_out1[0]),  // sfix16_En8
                 .g_i_1(Add1_out1[1]),  // sfix16_En8
                 .g_i_2(Add1_out1[2]),  // sfix16_En8
                 .g_i_3(Add1_out1[3]),  // sfix16_En8
                 .g_i_4(Add1_out1[4]),  // sfix16_En8
                 .g_i_5(Add1_out1[5]),  // sfix16_En8
                 .g_i_6(Add1_out1[6]),  // sfix16_En8
                 .g_i_7(Add1_out1[7]),  // sfix16_En8
                 .g(HDPC8_out1)  // sfix16_En8
                 );

  HDPC9 u_HDPC9 (.clk(clk),
                 .reset(reset),
                 .enb(clk_enable),
                 .g_e_0(Gain8_out1[0]),  // sfix32_En22
                 .g_e_1(Gain8_out1[1]),  // sfix32_En22
                 .g_e_2(Gain8_out1[2]),  // sfix32_En22
                 .g_e_3(Gain8_out1[3]),  // sfix32_En22
                 .g_e_4(Gain8_out1[4]),  // sfix32_En22
                 .g_e_5(Gain8_out1[5]),  // sfix32_En22
                 .g_e_6(Gain8_out1[6]),  // sfix32_En22
                 .g_e_7(Gain8_out1[7]),  // sfix32_En22
                 .g_i_0(Add1_out1[0]),  // sfix16_En8
                 .g_i_1(Add1_out1[1]),  // sfix16_En8
                 .g_i_2(Add1_out1[2]),  // sfix16_En8
                 .g_i_3(Add1_out1[3]),  // sfix16_En8
                 .g_i_4(Add1_out1[4]),  // sfix16_En8
                 .g_i_5(Add1_out1[5]),  // sfix16_En8
                 .g_i_6(Add1_out1[6]),  // sfix16_En8
                 .g_i_7(Add1_out1[7]),  // sfix16_En8
                 .g(HDPC9_out1)  // sfix16_En8
                 );

  HDPC10 u_HDPC10 (.clk(clk),
                   .reset(reset),
                   .enb(clk_enable),
                   .g_e_0(Gain9_out1[0]),  // sfix32_En25
                   .g_e_1(Gain9_out1[1]),  // sfix32_En25
                   .g_e_2(Gain9_out1[2]),  // sfix32_En25
                   .g_e_3(Gain9_out1[3]),  // sfix32_En25
                   .g_e_4(Gain9_out1[4]),  // sfix32_En25
                   .g_e_5(Gain9_out1[5]),  // sfix32_En25
                   .g_e_6(Gain9_out1[6]),  // sfix32_En25
                   .g_e_7(Gain9_out1[7]),  // sfix32_En25
                   .g_i_0(Add1_out1[0]),  // sfix16_En8
                   .g_i_1(Add1_out1[1]),  // sfix16_En8
                   .g_i_2(Add1_out1[2]),  // sfix16_En8
                   .g_i_3(Add1_out1[3]),  // sfix16_En8
                   .g_i_4(Add1_out1[4]),  // sfix16_En8
                   .g_i_5(Add1_out1[5]),  // sfix16_En8
                   .g_i_6(Add1_out1[6]),  // sfix16_En8
                   .g_i_7(Add1_out1[7]),  // sfix16_En8
                   .g(HDPC10_out1)  // sfix16_En8
                   );

  HDPC11 u_HDPC11 (.clk(clk),
                   .reset(reset),
                   .enb(clk_enable),
                   .g_e_0(Gain10_out1[0]),  // sfix32_En25
                   .g_e_1(Gain10_out1[1]),  // sfix32_En25
                   .g_e_2(Gain10_out1[2]),  // sfix32_En25
                   .g_e_3(Gain10_out1[3]),  // sfix32_En25
                   .g_e_4(Gain10_out1[4]),  // sfix32_En25
                   .g_e_5(Gain10_out1[5]),  // sfix32_En25
                   .g_e_6(Gain10_out1[6]),  // sfix32_En25
                   .g_e_7(Gain10_out1[7]),  // sfix32_En25
                   .g_i_0(Add1_out1[0]),  // sfix16_En8
                   .g_i_1(Add1_out1[1]),  // sfix16_En8
                   .g_i_2(Add1_out1[2]),  // sfix16_En8
                   .g_i_3(Add1_out1[3]),  // sfix16_En8
                   .g_i_4(Add1_out1[4]),  // sfix16_En8
                   .g_i_5(Add1_out1[5]),  // sfix16_En8
                   .g_i_6(Add1_out1[6]),  // sfix16_En8
                   .g_i_7(Add1_out1[7]),  // sfix16_En8
                   .g(HDPC11_out1)  // sfix16_En8
                   );

  HDPC12 u_HDPC12 (.clk(clk),
                   .reset(reset),
                   .enb(clk_enable),
                   .g_e_0(Gain11_out1[0]),  // sfix32_En22
                   .g_e_1(Gain11_out1[1]),  // sfix32_En22
                   .g_e_2(Gain11_out1[2]),  // sfix32_En22
                   .g_e_3(Gain11_out1[3]),  // sfix32_En22
                   .g_e_4(Gain11_out1[4]),  // sfix32_En22
                   .g_e_5(Gain11_out1[5]),  // sfix32_En22
                   .g_e_6(Gain11_out1[6]),  // sfix32_En22
                   .g_e_7(Gain11_out1[7]),  // sfix32_En22
                   .g_i_0(Add1_out1[0]),  // sfix16_En8
                   .g_i_1(Add1_out1[1]),  // sfix16_En8
                   .g_i_2(Add1_out1[2]),  // sfix16_En8
                   .g_i_3(Add1_out1[3]),  // sfix16_En8
                   .g_i_4(Add1_out1[4]),  // sfix16_En8
                   .g_i_5(Add1_out1[5]),  // sfix16_En8
                   .g_i_6(Add1_out1[6]),  // sfix16_En8
                   .g_i_7(Add1_out1[7]),  // sfix16_En8
                   .g(HDPC12_out1)  // sfix16_En8
                   );

  HDPC13 u_HDPC13 (.clk(clk),
                   .reset(reset),
                   .enb(clk_enable),
                   .g_e_0(Gain12_out1[0]),  // sfix32_En22
                   .g_e_1(Gain12_out1[1]),  // sfix32_En22
                   .g_e_2(Gain12_out1[2]),  // sfix32_En22
                   .g_e_3(Gain12_out1[3]),  // sfix32_En22
                   .g_e_4(Gain12_out1[4]),  // sfix32_En22
                   .g_e_5(Gain12_out1[5]),  // sfix32_En22
                   .g_e_6(Gain12_out1[6]),  // sfix32_En22
                   .g_e_7(Gain12_out1[7]),  // sfix32_En22
                   .g_i_0(Add1_out1[0]),  // sfix16_En8
                   .g_i_1(Add1_out1[1]),  // sfix16_En8
                   .g_i_2(Add1_out1[2]),  // sfix16_En8
                   .g_i_3(Add1_out1[3]),  // sfix16_En8
                   .g_i_4(Add1_out1[4]),  // sfix16_En8
                   .g_i_5(Add1_out1[5]),  // sfix16_En8
                   .g_i_6(Add1_out1[6]),  // sfix16_En8
                   .g_i_7(Add1_out1[7]),  // sfix16_En8
                   .g(HDPC13_out1)  // sfix16_En8
                   );

  HDPC14 u_HDPC14 (.clk(clk),
                   .reset(reset),
                   .enb(clk_enable),
                   .g_e_0(Gain13_out1[0]),  // sfix32_En22
                   .g_e_1(Gain13_out1[1]),  // sfix32_En22
                   .g_e_2(Gain13_out1[2]),  // sfix32_En22
                   .g_e_3(Gain13_out1[3]),  // sfix32_En22
                   .g_e_4(Gain13_out1[4]),  // sfix32_En22
                   .g_e_5(Gain13_out1[5]),  // sfix32_En22
                   .g_e_6(Gain13_out1[6]),  // sfix32_En22
                   .g_e_7(Gain13_out1[7]),  // sfix32_En22
                   .g_i_0(Add1_out1[0]),  // sfix16_En8
                   .g_i_1(Add1_out1[1]),  // sfix16_En8
                   .g_i_2(Add1_out1[2]),  // sfix16_En8
                   .g_i_3(Add1_out1[3]),  // sfix16_En8
                   .g_i_4(Add1_out1[4]),  // sfix16_En8
                   .g_i_5(Add1_out1[5]),  // sfix16_En8
                   .g_i_6(Add1_out1[6]),  // sfix16_En8
                   .g_i_7(Add1_out1[7]),  // sfix16_En8
                   .g(HDPC14_out1)  // sfix16_En8
                   );

  HDPC15 u_HDPC15 (.clk(clk),
                   .reset(reset),
                   .enb(clk_enable),
                   .g_e_0(Gain14_out1[0]),  // sfix32_En25
                   .g_e_1(Gain14_out1[1]),  // sfix32_En25
                   .g_e_2(Gain14_out1[2]),  // sfix32_En25
                   .g_e_3(Gain14_out1[3]),  // sfix32_En25
                   .g_e_4(Gain14_out1[4]),  // sfix32_En25
                   .g_e_5(Gain14_out1[5]),  // sfix32_En25
                   .g_e_6(Gain14_out1[6]),  // sfix32_En25
                   .g_e_7(Gain14_out1[7]),  // sfix32_En25
                   .g_i_0(Add1_out1[0]),  // sfix16_En8
                   .g_i_1(Add1_out1[1]),  // sfix16_En8
                   .g_i_2(Add1_out1[2]),  // sfix16_En8
                   .g_i_3(Add1_out1[3]),  // sfix16_En8
                   .g_i_4(Add1_out1[4]),  // sfix16_En8
                   .g_i_5(Add1_out1[5]),  // sfix16_En8
                   .g_i_6(Add1_out1[6]),  // sfix16_En8
                   .g_i_7(Add1_out1[7]),  // sfix16_En8
                   .g(HDPC15_out1)  // sfix16_En8
                   );

  HDPC16 u_HDPC16 (.clk(clk),
                   .reset(reset),
                   .enb(clk_enable),
                   .g_e_0(Gain15_out1[0]),  // sfix32_En22
                   .g_e_1(Gain15_out1[1]),  // sfix32_En22
                   .g_e_2(Gain15_out1[2]),  // sfix32_En22
                   .g_e_3(Gain15_out1[3]),  // sfix32_En22
                   .g_e_4(Gain15_out1[4]),  // sfix32_En22
                   .g_e_5(Gain15_out1[5]),  // sfix32_En22
                   .g_e_6(Gain15_out1[6]),  // sfix32_En22
                   .g_e_7(Gain15_out1[7]),  // sfix32_En22
                   .g_i_0(Add1_out1[0]),  // sfix16_En8
                   .g_i_1(Add1_out1[1]),  // sfix16_En8
                   .g_i_2(Add1_out1[2]),  // sfix16_En8
                   .g_i_3(Add1_out1[3]),  // sfix16_En8
                   .g_i_4(Add1_out1[4]),  // sfix16_En8
                   .g_i_5(Add1_out1[5]),  // sfix16_En8
                   .g_i_6(Add1_out1[6]),  // sfix16_En8
                   .g_i_7(Add1_out1[7]),  // sfix16_En8
                   .g(HDPC16_out1)  // sfix16_En8
                   );

  HDPC17 u_HDPC17 (.clk(clk),
                   .reset(reset),
                   .enb(clk_enable),
                   .g_e_0(Gain16_out1[0]),  // sfix32_En25
                   .g_e_1(Gain16_out1[1]),  // sfix32_En25
                   .g_e_2(Gain16_out1[2]),  // sfix32_En25
                   .g_e_3(Gain16_out1[3]),  // sfix32_En25
                   .g_e_4(Gain16_out1[4]),  // sfix32_En25
                   .g_e_5(Gain16_out1[5]),  // sfix32_En25
                   .g_e_6(Gain16_out1[6]),  // sfix32_En25
                   .g_e_7(Gain16_out1[7]),  // sfix32_En25
                   .g_i_0(Add1_out1[0]),  // sfix16_En8
                   .g_i_1(Add1_out1[1]),  // sfix16_En8
                   .g_i_2(Add1_out1[2]),  // sfix16_En8
                   .g_i_3(Add1_out1[3]),  // sfix16_En8
                   .g_i_4(Add1_out1[4]),  // sfix16_En8
                   .g_i_5(Add1_out1[5]),  // sfix16_En8
                   .g_i_6(Add1_out1[6]),  // sfix16_En8
                   .g_i_7(Add1_out1[7]),  // sfix16_En8
                   .g(HDPC17_out1)  // sfix16_En8
                   );

  assign in0_17 = Gain19_out1[17];

  assign in0_16 = Gain19_out1[16];

  assign in0_15 = Gain19_out1[15];

  assign in0_14 = Gain19_out1[14];

  assign in0_13 = Gain19_out1[13];

  assign in0_12 = Gain19_out1[12];

  assign in0_11 = Gain19_out1[11];

  assign in0_10 = Gain19_out1[10];

  assign in0_9 = Gain19_out1[9];

  assign in0_8 = Gain19_out1[8];

  assign in0_7_2 = Gain19_out1[7];

  assign in0_6_2 = Gain19_out1[6];

  assign in0_5_2 = Gain19_out1[5];

  assign in0_4_2 = Gain19_out1[4];

  assign in0_3_2 = Gain19_out1[3];

  assign in0_2_2 = Gain19_out1[2];

  assign in0_1_2 = Gain19_out1[1];

  assign Gain19_out1[0] = {{2{HDPC_Conductivities[0][15]}}, {HDPC_Conductivities[0], 14'b00000000000000}};
  assign Gain19_out1[1] = {{2{HDPC_Conductivities[1][15]}}, {HDPC_Conductivities[1], 14'b00000000000000}};
  assign Gain19_out1[2] = {{2{HDPC_Conductivities[2][15]}}, {HDPC_Conductivities[2], 14'b00000000000000}};
  assign Gain19_out1[3] = {{2{HDPC_Conductivities[3][15]}}, {HDPC_Conductivities[3], 14'b00000000000000}};
  assign Gain19_out1[4] = {{2{HDPC_Conductivities[4][15]}}, {HDPC_Conductivities[4], 14'b00000000000000}};
  assign Gain19_out1[5] = {{2{HDPC_Conductivities[5][15]}}, {HDPC_Conductivities[5], 14'b00000000000000}};
  assign Gain19_out1[6] = {{2{HDPC_Conductivities[6][15]}}, {HDPC_Conductivities[6], 14'b00000000000000}};
  assign Gain19_out1[7] = {{2{HDPC_Conductivities[7][15]}}, {HDPC_Conductivities[7], 14'b00000000000000}};
  assign Gain19_out1[8] = {{2{HDPC_Conductivities[8][15]}}, {HDPC_Conductivities[8], 14'b00000000000000}};
  assign Gain19_out1[9] = {{2{HDPC_Conductivities[9][15]}}, {HDPC_Conductivities[9], 14'b00000000000000}};
  assign Gain19_out1[10] = {{2{HDPC_Conductivities[10][15]}}, {HDPC_Conductivities[10], 14'b00000000000000}};
  assign Gain19_out1[11] = {{2{HDPC_Conductivities[11][15]}}, {HDPC_Conductivities[11], 14'b00000000000000}};
  assign Gain19_out1[12] = {{2{HDPC_Conductivities[12][15]}}, {HDPC_Conductivities[12], 14'b00000000000000}};
  assign Gain19_out1[13] = {{2{HDPC_Conductivities[13][15]}}, {HDPC_Conductivities[13], 14'b00000000000000}};
  assign Gain19_out1[14] = {{2{HDPC_Conductivities[14][15]}}, {HDPC_Conductivities[14], 14'b00000000000000}};
  assign Gain19_out1[15] = {{2{HDPC_Conductivities[15][15]}}, {HDPC_Conductivities[15], 14'b00000000000000}};
  assign Gain19_out1[16] = {{2{HDPC_Conductivities[16][15]}}, {HDPC_Conductivities[16], 14'b00000000000000}};
  assign Gain19_out1[17] = {{2{HDPC_Conductivities[17][15]}}, {HDPC_Conductivities[17], 14'b00000000000000}};



  assign in0_0_2 = Gain19_out1[0];

  assign Sum_of_Elements_stage2_add_temp = in0_0_2 + in0_1_2;
  assign Sum_of_Elements_op_stage1 = {Sum_of_Elements_stage2_add_temp[31], Sum_of_Elements_stage2_add_temp};



  assign Sum_of_Elements_stage3_add_cast = Sum_of_Elements_op_stage1[31:0];
  assign Sum_of_Elements_stage3_add_temp = Sum_of_Elements_stage3_add_cast + in0_2_2;
  assign Sum_of_Elements_op_stage2 = {{2{Sum_of_Elements_stage3_add_temp[31]}}, Sum_of_Elements_stage3_add_temp};



  assign Sum_of_Elements_stage4_add_cast = Sum_of_Elements_op_stage2[31:0];
  assign Sum_of_Elements_stage4_add_temp = Sum_of_Elements_stage4_add_cast + in0_3_2;
  assign Sum_of_Elements_op_stage3 = {{3{Sum_of_Elements_stage4_add_temp[31]}}, Sum_of_Elements_stage4_add_temp};



  assign Sum_of_Elements_stage5_add_cast = Sum_of_Elements_op_stage3[31:0];
  assign Sum_of_Elements_stage5_add_temp = Sum_of_Elements_stage5_add_cast + in0_4_2;
  assign Sum_of_Elements_op_stage4 = {{4{Sum_of_Elements_stage5_add_temp[31]}}, Sum_of_Elements_stage5_add_temp};



  assign Sum_of_Elements_stage6_add_cast = Sum_of_Elements_op_stage4[31:0];
  assign Sum_of_Elements_stage6_add_temp = Sum_of_Elements_stage6_add_cast + in0_5_2;
  assign Sum_of_Elements_op_stage5 = {{5{Sum_of_Elements_stage6_add_temp[31]}}, Sum_of_Elements_stage6_add_temp};



  assign Sum_of_Elements_stage7_add_cast = Sum_of_Elements_op_stage5[31:0];
  assign Sum_of_Elements_stage7_add_temp = Sum_of_Elements_stage7_add_cast + in0_6_2;
  assign Sum_of_Elements_op_stage6 = {{6{Sum_of_Elements_stage7_add_temp[31]}}, Sum_of_Elements_stage7_add_temp};



  assign Sum_of_Elements_stage8_add_cast = Sum_of_Elements_op_stage6[31:0];
  assign Sum_of_Elements_stage8_add_temp = Sum_of_Elements_stage8_add_cast + in0_7_2;
  assign Sum_of_Elements_op_stage7 = {{7{Sum_of_Elements_stage8_add_temp[31]}}, Sum_of_Elements_stage8_add_temp};



  assign Sum_of_Elements_stage9_add_cast = Sum_of_Elements_op_stage7[31:0];
  assign Sum_of_Elements_stage9_add_temp = Sum_of_Elements_stage9_add_cast + in0_8;
  assign Sum_of_Elements_op_stage8 = {{8{Sum_of_Elements_stage9_add_temp[31]}}, Sum_of_Elements_stage9_add_temp};



  assign Sum_of_Elements_stage10_add_cast = Sum_of_Elements_op_stage8[31:0];
  assign Sum_of_Elements_stage10_add_temp = Sum_of_Elements_stage10_add_cast + in0_9;
  assign Sum_of_Elements_op_stage9 = {{9{Sum_of_Elements_stage10_add_temp[31]}}, Sum_of_Elements_stage10_add_temp};



  assign Sum_of_Elements_stage11_add_cast = Sum_of_Elements_op_stage9[31:0];
  assign Sum_of_Elements_stage11_add_temp = Sum_of_Elements_stage11_add_cast + in0_10;
  assign Sum_of_Elements_op_stage10 = {{10{Sum_of_Elements_stage11_add_temp[31]}}, Sum_of_Elements_stage11_add_temp};



  assign Sum_of_Elements_stage12_add_cast = Sum_of_Elements_op_stage10[31:0];
  assign Sum_of_Elements_stage12_add_temp = Sum_of_Elements_stage12_add_cast + in0_11;
  assign Sum_of_Elements_op_stage11 = {{11{Sum_of_Elements_stage12_add_temp[31]}}, Sum_of_Elements_stage12_add_temp};



  assign Sum_of_Elements_stage13_add_cast = Sum_of_Elements_op_stage11[31:0];
  assign Sum_of_Elements_stage13_add_temp = Sum_of_Elements_stage13_add_cast + in0_12;
  assign Sum_of_Elements_op_stage12 = {{12{Sum_of_Elements_stage13_add_temp[31]}}, Sum_of_Elements_stage13_add_temp};



  assign Sum_of_Elements_stage14_add_cast = Sum_of_Elements_op_stage12[31:0];
  assign Sum_of_Elements_stage14_add_temp = Sum_of_Elements_stage14_add_cast + in0_13;
  assign Sum_of_Elements_op_stage13 = {{13{Sum_of_Elements_stage14_add_temp[31]}}, Sum_of_Elements_stage14_add_temp};



  assign Sum_of_Elements_stage15_add_cast = Sum_of_Elements_op_stage13[31:0];
  assign Sum_of_Elements_stage15_add_temp = Sum_of_Elements_stage15_add_cast + in0_14;
  assign Sum_of_Elements_op_stage14 = {{14{Sum_of_Elements_stage15_add_temp[31]}}, Sum_of_Elements_stage15_add_temp};



  assign Sum_of_Elements_stage16_add_cast = Sum_of_Elements_op_stage14[31:0];
  assign Sum_of_Elements_stage16_add_temp = Sum_of_Elements_stage16_add_cast + in0_15;
  assign Sum_of_Elements_op_stage15 = {{15{Sum_of_Elements_stage16_add_temp[31]}}, Sum_of_Elements_stage16_add_temp};



  assign Sum_of_Elements_stage17_add_cast = Sum_of_Elements_op_stage15[31:0];
  assign Sum_of_Elements_stage17_add_temp = Sum_of_Elements_stage17_add_cast + in0_16;
  assign Sum_of_Elements_op_stage16 = {{16{Sum_of_Elements_stage17_add_temp[31]}}, Sum_of_Elements_stage17_add_temp};



  assign Sum_of_Elements_stage18_add_cast = Sum_of_Elements_op_stage16[31:0];
  assign Sum_of_Elements_out1 = Sum_of_Elements_stage18_add_cast + in0_17;



  INc u_INc (.In1(Sum_of_Elements_out1),  // sfix32_En22
             .g(INc_out1)  // sfix16_En8
             );

  assign Add1_u = {{16{INc_out1[15]}}, INc_out1};

  genvar t_0_011;
  generate
    for(t_0_011 = 32'sd0; t_0_011 <= 32'sd7; t_0_011 = t_0_011 + 32'sd1) begin:Add1_out1_gen
      assign Add1_add_cast[t_0_011] = {{16{INb_out1[t_0_011][15]}}, INb_out1[t_0_011]};
      assign Add1_add_temp[t_0_011] = Add1_u + Add1_add_cast[t_0_011];
      assign Add1_out1[t_0_011] = Add1_add_temp[t_0_011][15:0];
    end
  endgenerate




  HDPC18 u_HDPC18 (.clk(clk),
                   .reset(reset),
                   .enb(clk_enable),
                   .g_e_0(Gain17_out1[0]),  // sfix32_En24
                   .g_e_1(Gain17_out1[1]),  // sfix32_En24
                   .g_e_2(Gain17_out1[2]),  // sfix32_En24
                   .g_e_3(Gain17_out1[3]),  // sfix32_En24
                   .g_e_4(Gain17_out1[4]),  // sfix32_En24
                   .g_e_5(Gain17_out1[5]),  // sfix32_En24
                   .g_e_6(Gain17_out1[6]),  // sfix32_En24
                   .g_e_7(Gain17_out1[7]),  // sfix32_En24
                   .g_i_0(Add1_out1[0]),  // sfix16_En8
                   .g_i_1(Add1_out1[1]),  // sfix16_En8
                   .g_i_2(Add1_out1[2]),  // sfix16_En8
                   .g_i_3(Add1_out1[3]),  // sfix16_En8
                   .g_i_4(Add1_out1[4]),  // sfix16_En8
                   .g_i_5(Add1_out1[5]),  // sfix16_En8
                   .g_i_6(Add1_out1[6]),  // sfix16_En8
                   .g_i_7(Add1_out1[7]),  // sfix16_En8
                   .g(HDPC18_out1)  // sfix16_En8
                   );

  assign HDPC_Conductivities[0] = HDPC18_out1;
  assign HDPC_Conductivities[1] = HDPC17_out1;
  assign HDPC_Conductivities[2] = HDPC16_out1;
  assign HDPC_Conductivities[3] = HDPC15_out1;
  assign HDPC_Conductivities[4] = HDPC14_out1;
  assign HDPC_Conductivities[5] = HDPC13_out1;
  assign HDPC_Conductivities[6] = HDPC12_out1;
  assign HDPC_Conductivities[7] = HDPC11_out1;
  assign HDPC_Conductivities[8] = HDPC10_out1;
  assign HDPC_Conductivities[9] = HDPC9_out1;
  assign HDPC_Conductivities[10] = HDPC8_out1;
  assign HDPC_Conductivities[11] = HDPC7_out1;
  assign HDPC_Conductivities[12] = HDPC6_out1;
  assign HDPC_Conductivities[13] = HDPC5_out1;
  assign HDPC_Conductivities[14] = HDPC4_out1;
  assign HDPC_Conductivities[15] = HDPC3_out1;
  assign HDPC_Conductivities[16] = HDPC2_out1;
  assign HDPC_Conductivities[17] = HDPC1_out1;

  assign Out1_0 = HDPC_Conductivities[0];

  assign Out1_1 = HDPC_Conductivities[1];

  assign Out1_2 = HDPC_Conductivities[2];

  assign Out1_3 = HDPC_Conductivities[3];

  assign Out1_4 = HDPC_Conductivities[4];

  assign Out1_5 = HDPC_Conductivities[5];

  assign Out1_6 = HDPC_Conductivities[6];

  assign Out1_7 = HDPC_Conductivities[7];

  assign Out1_8 = HDPC_Conductivities[8];

  assign Out1_9 = HDPC_Conductivities[9];

  assign Out1_10 = HDPC_Conductivities[10];

  assign Out1_11 = HDPC_Conductivities[11];

  assign Out1_12 = HDPC_Conductivities[12];

  assign Out1_13 = HDPC_Conductivities[13];

  assign Out1_14 = HDPC_Conductivities[14];

  assign Out1_15 = HDPC_Conductivities[15];

  assign Out1_16 = HDPC_Conductivities[16];

  assign Out1_17 = HDPC_Conductivities[17];

  assign ce_out = clk_enable;

endmodule  // Improved_Network_Model

